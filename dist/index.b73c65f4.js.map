{"mappings":"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","sources":["<anon>","app.js","node_modules/motion/dist/es/framer-motion/dist/es/animation/animate/index.mjs","node_modules/motion/dist/es/motion-dom/dist/es/animation/controls/Group.mjs","node_modules/motion/dist/es/motion-dom/dist/es/animation/controls/BaseGroup.mjs","node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","node_modules/motion/dist/es/motion-utils/dist/es/memo.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animate/sequence.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/index.mjs","node_modules/motion/dist/es/motion-utils/dist/es/time-conversion.mjs","node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/linear.mjs","node_modules/motion/dist/es/motion-utils/dist/es/progress.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/clamp.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/utils/velocity.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/velocity-per-second.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/defaults.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/find.mjs","node_modules/motion/dist/es/motion-utils/dist/es/errors.mjs","node_modules/motion/dist/es/motion-utils/dist/es/noop.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/sequence/create.mjs","node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/wrap.mjs","node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/is-easing-array.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/default.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/fill.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/number.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/utils/is-motion-value.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animate/resolve-subjects.mjs","node_modules/motion/dist/es/motion-dom/dist/es/utils/resolve-elements.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/sequence/utils/calc-repeat-duration.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/sequence/utils/edit.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/array.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/sequence/utils/normalize-times.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/sequence/utils/sort.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animate/subject.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/store.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/get-value-transition.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/keys-position.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/keys-transform.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/utils/setters.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/resolve-value.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/index.mjs","node_modules/motion/dist/es/framer-motion/dist/es/frameloop/sync-time.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/GlobalConfig.mjs","node_modules/motion/dist/es/framer-motion/dist/es/frameloop/frame.mjs","node_modules/motion/dist/es/framer-motion/dist/es/frameloop/batcher.mjs","node_modules/motion/dist/es/framer-motion/dist/es/frameloop/render-step.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/subscription-manager.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-variants.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/is.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/motion-value.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/use-instant-transition-state.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/easing.mjs","node_modules/motion/dist/es/motion-dom/dist/es/utils/is-bezier-definition.mjs","node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/linear-easing.mjs","node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/memo.mjs","node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/flags.mjs","node_modules/motion/dist/es/framer-motion/dist/es/easing/anticipate.mjs","node_modules/motion/dist/es/framer-motion/dist/es/easing/back.mjs","node_modules/motion/dist/es/framer-motion/dist/es/easing/cubic-bezier.mjs","node_modules/motion/dist/es/framer-motion/dist/es/easing/modifiers/mirror.mjs","node_modules/motion/dist/es/framer-motion/dist/es/easing/modifiers/reverse.mjs","node_modules/motion/dist/es/framer-motion/dist/es/easing/circ.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-none.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/is-zero-value-string.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/complex/index.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/index.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/hex.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/rgba.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/numbers/index.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/sanitize.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/utils.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/float-regex.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/is-nullish.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/hsla.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/numbers/units.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/color-regex.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","node_modules/motion/dist/es/framer-motion/dist/es/value/types/complex/filter.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/defaults.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/number.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/transform.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/type-int.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/is-numerical-string.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/test.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animatable.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/index.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/complex.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/color.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/hsla-to-rgba.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/immediate.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/pipe.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/visibility.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/inertia.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/keyframes.mjs","node_modules/motion/dist/es/framer-motion/dist/es/easing/ease.mjs","node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/map.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/interpolate.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/time.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/index.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/default-transitions.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/create-visual-element.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/models.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/VisualElement.mjs","node_modules/motion/dist/es/framer-motion/dist/es/motion/features/definitions.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/index.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/is-browser.mjs","node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/state.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/find.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-variant-label.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/utils/variant-props.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/utils/motion-values.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-styles.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-transform.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/path.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/measure.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/render.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/render.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-correction.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/measure.mjs","node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/conversion.mjs","node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-apply.mjs","node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/has-transform.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/object/ObjectVisualElement.mjs","node_modules/motion/dist/es/framer-motion/dist/es/animation/animate/single-value.mjs","node_modules/motion/dist/es/framer-motion/dist/es/render/dom/viewport/index.mjs"],"sourcesContent":["\n/*#__NO_SIDE_EFFECTS__*/ function $b0dedcc96679f76e$export$7c73462e0d25e514(callback) {\n    let result;\n    return ()=>{\n        if (result === undefined) result = callback();\n        return result;\n    };\n}\n\n\nconst $03517027151a4c9c$export$20d68f04f30763a5 = (0, $b0dedcc96679f76e$export$7c73462e0d25e514)(()=>window.ScrollTimeline !== undefined);\n\n\nclass $e3383feb8717bc71$export$4d0c371993b9283e {\n    constructor(animations){\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = ()=>this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation)=>\"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */ getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for(let i = 0; i < this.animations.length; i++)this.animations[i][propName] = newValue;\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation)=>{\n            if ((0, $03517027151a4c9c$export$20d68f04f30763a5)() && animation.attachTimeline) return animation.attachTimeline(timeline);\n            else if (typeof fallback === \"function\") return fallback(animation);\n        });\n        return ()=>{\n            subscriptions.forEach((cancel, i)=>{\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for(let i = 0; i < this.animations.length; i++)max = Math.max(max, this.animations[i].duration);\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls)=>controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */ class $56437bef5704e34a$export$c1e41718f71efe41 extends (0, $e3383feb8717bc71$export$4d0c371993b9283e) {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\n\n\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */ /*#__NO_SIDE_EFFECTS__*/ const $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7 = (seconds)=>seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/ const $72f03d5c7302cbd5$export$f64c3bfbc58eec0f = (milliseconds)=>milliseconds / 1000;\n\n\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */ const $58d9506861683f86$export$f4ff70a5b4808fd8 = 20000;\nfunction $58d9506861683f86$export$cbdd6b3d40ea54e2(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while(!state.done && duration < $58d9506861683f86$export$f4ff70a5b4808fd8){\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= $58d9506861683f86$export$f4ff70a5b4808fd8 ? Infinity : duration;\n}\n\n\n\n/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/ /*#__NO_SIDE_EFFECTS__*/ const $ef49c9e1b212a303$export$504d7abb21fa8c9 = (from, to, value)=>{\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\n\nconst $b2958e3c2019bdf2$export$66d3851e2b1ec912 = (easing, duration, resolution = 10 // as milliseconds\n)=>{\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for(let i = 0; i < numPoints; i++)points += easing((0, $ef49c9e1b212a303$export$504d7abb21fa8c9)(0, numPoints - 1, i)) + \", \";\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\n\nconst $61505dd9bdaf733e$export$7d15b64cf5a3a4c4 = (min, max, v)=>{\n    if (v > max) return max;\n    if (v < min) return min;\n    return v;\n};\n\n\n/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/ function $1380f062c1a4c678$export$eab0632f7ad4f9d7(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\n\nconst $26e171f99dec0da1$var$velocitySampleDuration = 5; // ms\nfunction $26e171f99dec0da1$export$854187271d233eb5(resolveValue, t, current) {\n    const prevT = Math.max(t - $26e171f99dec0da1$var$velocitySampleDuration, 0);\n    return (0, $1380f062c1a4c678$export$eab0632f7ad4f9d7)(current - resolveValue(prevT), t - prevT);\n}\n\n\nconst $104c5e3e7ddb3284$export$86436497e7b05d16 = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800,\n    bounce: 0.3,\n    visualDuration: 0.3,\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5\n    },\n    // Limits\n    minDuration: 0.01,\n    maxDuration: 10.0,\n    minDamping: 0.05,\n    maxDamping: 1\n};\n\n\n/*#__NO_SIDE_EFFECTS__*/ const $784484be748b616c$export$8793edee2d425525 = (any)=>any;\n\n\nlet $66afa3c9bf43e7f2$export$491112666e282270 = (0, $784484be748b616c$export$8793edee2d425525);\nlet $66afa3c9bf43e7f2$export$f5708dca728d7177 = (0, $784484be748b616c$export$8793edee2d425525);\nvar $66afa3c9bf43e7f2$var$check, $66afa3c9bf43e7f2$var$message, $66afa3c9bf43e7f2$var$check1, $66afa3c9bf43e7f2$var$message1;\n\n\n\n\n\nconst $f5a439e913a3fe87$var$safeMin = 0.001;\nfunction $f5a439e913a3fe87$export$b15f158dc6d6f458({ duration: duration = (0, $104c5e3e7ddb3284$export$86436497e7b05d16).duration, bounce: bounce = (0, $104c5e3e7ddb3284$export$86436497e7b05d16).bounce, velocity: velocity = (0, $104c5e3e7ddb3284$export$86436497e7b05d16).velocity, mass: mass = (0, $104c5e3e7ddb3284$export$86436497e7b05d16).mass }) {\n    let envelope;\n    let derivative;\n    (0, $66afa3c9bf43e7f2$export$491112666e282270)(duration <= (0, $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7)((0, $104c5e3e7ddb3284$export$86436497e7b05d16).maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */ dampingRatio = (0, $61505dd9bdaf733e$export$7d15b64cf5a3a4c4)((0, $104c5e3e7ddb3284$export$86436497e7b05d16).minDamping, (0, $104c5e3e7ddb3284$export$86436497e7b05d16).maxDamping, dampingRatio);\n    duration = (0, $61505dd9bdaf733e$export$7d15b64cf5a3a4c4)((0, $104c5e3e7ddb3284$export$86436497e7b05d16).minDuration, (0, $104c5e3e7ddb3284$export$86436497e7b05d16).maxDuration, (0, $72f03d5c7302cbd5$export$f64c3bfbc58eec0f)(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */ envelope = (undampedFreq)=>{\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = $f5a439e913a3fe87$export$5f679887c3a78b15(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return $f5a439e913a3fe87$var$safeMin - a / b * c;\n        };\n        derivative = (undampedFreq)=>{\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = $f5a439e913a3fe87$export$5f679887c3a78b15(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + $f5a439e913a3fe87$var$safeMin > 0 ? -1 : 1;\n            return factor * ((d - e) * f) / g;\n        };\n    } else {\n        /**\n         * Critically-damped spring\n         */ envelope = (undampedFreq)=>{\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -$f5a439e913a3fe87$var$safeMin + a * b;\n        };\n        derivative = (undampedFreq)=>{\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = $f5a439e913a3fe87$var$approximateRoot(envelope, derivative, initialGuess);\n    duration = (0, $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7)(duration);\n    if (isNaN(undampedFreq)) return {\n        stiffness: (0, $104c5e3e7ddb3284$export$86436497e7b05d16).stiffness,\n        damping: (0, $104c5e3e7ddb3284$export$86436497e7b05d16).damping,\n        duration: duration\n    };\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness: stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration: duration\n        };\n    }\n}\nconst $f5a439e913a3fe87$var$rootIterations = 12;\nfunction $f5a439e913a3fe87$var$approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for(let i = 1; i < $f5a439e913a3fe87$var$rootIterations; i++)result = result - envelope(result) / derivative(result);\n    return result;\n}\nfunction $f5a439e913a3fe87$export$5f679887c3a78b15(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\n\nconst $5b7d0ac4aa5a14e2$var$durationKeys = [\n    \"duration\",\n    \"bounce\"\n];\nconst $5b7d0ac4aa5a14e2$var$physicsKeys = [\n    \"stiffness\",\n    \"damping\",\n    \"mass\"\n];\nfunction $5b7d0ac4aa5a14e2$var$isSpringType(options, keys) {\n    return keys.some((key)=>options[key] !== undefined);\n}\nfunction $5b7d0ac4aa5a14e2$var$getSpringOptions(options) {\n    let springOptions = {\n        velocity: (0, $104c5e3e7ddb3284$export$86436497e7b05d16).velocity,\n        stiffness: (0, $104c5e3e7ddb3284$export$86436497e7b05d16).stiffness,\n        damping: (0, $104c5e3e7ddb3284$export$86436497e7b05d16).damping,\n        mass: (0, $104c5e3e7ddb3284$export$86436497e7b05d16).mass,\n        isResolvedFromDuration: false,\n        ...options\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!$5b7d0ac4aa5a14e2$var$isSpringType(options, $5b7d0ac4aa5a14e2$var$physicsKeys) && $5b7d0ac4aa5a14e2$var$isSpringType(options, $5b7d0ac4aa5a14e2$var$durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = 2 * Math.PI / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * (0, $61505dd9bdaf733e$export$7d15b64cf5a3a4c4)(0.05, 1, 1 - (options.bounce || 0)) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: (0, $104c5e3e7ddb3284$export$86436497e7b05d16).mass,\n                stiffness: stiffness,\n                damping: damping\n            };\n        } else {\n            const derived = (0, $f5a439e913a3fe87$export$b15f158dc6d6f458)(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: (0, $104c5e3e7ddb3284$export$86436497e7b05d16).mass\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction $5b7d0ac4aa5a14e2$export$b36281d89752ae66(optionsOrVisualDuration = (0, $104c5e3e7ddb3284$export$86436497e7b05d16).visualDuration, bounce = (0, $104c5e3e7ddb3284$export$86436497e7b05d16).bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\" ? {\n        visualDuration: optionsOrVisualDuration,\n        keyframes: [\n            0,\n            1\n        ],\n        bounce: bounce\n    } : optionsOrVisualDuration;\n    let { restSpeed: restSpeed, restDelta: restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */ const state = {\n        done: false,\n        value: origin\n    };\n    const { stiffness: stiffness, damping: damping, mass: mass, duration: duration, velocity: velocity, isResolvedFromDuration: isResolvedFromDuration } = $5b7d0ac4aa5a14e2$var$getSpringOptions({\n        ...options,\n        velocity: -(0, $72f03d5c7302cbd5$export$f64c3bfbc58eec0f)(options.velocity || 0)\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = (0, $72f03d5c7302cbd5$export$f64c3bfbc58eec0f)(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */ const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? (0, $104c5e3e7ddb3284$export$86436497e7b05d16).restSpeed.granular : (0, $104c5e3e7ddb3284$export$86436497e7b05d16).restSpeed.default);\n    restDelta || (restDelta = isGranularScale ? (0, $104c5e3e7ddb3284$export$86436497e7b05d16).restDelta.granular : (0, $104c5e3e7ddb3284$export$86436497e7b05d16).restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = (0, $f5a439e913a3fe87$export$5f679887c3a78b15)(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t)=>{\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t) + initialDelta * Math.cos(angularFreq * t));\n        };\n    } else if (dampingRatio === 1) // Critically damped spring\n    resolveSpring = (t)=>target - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t)=>{\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t)=>{\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */ if (dampingRatio < 1) currentVelocity = t === 0 ? (0, $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7)(initialVelocity) : (0, $26e171f99dec0da1$export$854187271d233eb5)(resolveSpring, t, current);\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            } else state.done = t >= duration;\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: ()=>{\n            const calculatedDuration = Math.min((0, $58d9506861683f86$export$cbdd6b3d40ea54e2)(generator), (0, $58d9506861683f86$export$f4ff70a5b4808fd8));\n            const easing = (0, $b2958e3c2019bdf2$export$66d3851e2b1ec912)((progress)=>generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        }\n    };\n    return generator;\n}\n\n\n\n\n\n\n\n\n/**\n * Create a progress => progress easing function from a generator.\n */ function $5d635071c1d882be$export$7f1511d09ee75a99(options, scale = 100, createGenerator) {\n    const generator = createGenerator({\n        ...options,\n        keyframes: [\n            0,\n            scale\n        ]\n    });\n    const duration = Math.min((0, $58d9506861683f86$export$cbdd6b3d40ea54e2)(generator), (0, $58d9506861683f86$export$f4ff70a5b4808fd8));\n    return {\n        type: \"keyframes\",\n        ease: (progress)=>{\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: (0, $72f03d5c7302cbd5$export$f64c3bfbc58eec0f)(duration)\n    };\n}\n\n\nfunction $fd8d2a9f7ab45528$export$6ab7812f1bac68be(type) {\n    return typeof type === \"function\";\n}\n\n\nconst $924c42a4fca118a9$export$4997ffc0176396a6 = (min, max, v)=>{\n    const rangeSize = max - min;\n    return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\n\nconst $c781891811e4db53$export$216948827bbdc797 = (ease)=>{\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\n\nfunction $995d2e17496ee431$export$41c5e731255a462(easing, i) {\n    return (0, $c781891811e4db53$export$216948827bbdc797)(easing) ? easing[(0, $924c42a4fca118a9$export$4997ffc0176396a6)(0, easing.length, i)] : easing;\n}\n\n\n\n\n/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/ const $a9e22a3f98efa112$export$3bb0b4ff1037b8dd = (from, to, progress)=>{\n    return from + (to - from) * progress;\n};\n\n\nfunction $7c3816daf0a74789$export$dafee61230cf05c6(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for(let i = 1; i <= remaining; i++){\n        const offsetProgress = (0, $ef49c9e1b212a303$export$504d7abb21fa8c9)(0, remaining, i);\n        offset.push((0, $a9e22a3f98efa112$export$3bb0b4ff1037b8dd)(min, 1, offsetProgress));\n    }\n}\n\n\nfunction $9834b5ef2cf2f4ed$export$24dbcec0b26e6d9d(arr) {\n    const offset = [\n        0\n    ];\n    (0, $7c3816daf0a74789$export$dafee61230cf05c6)(offset, arr.length - 1);\n    return offset;\n}\n\n\n\nconst $bdc57029e711ba86$export$605d60a2578142d3 = (value)=>Boolean(value && value.getVelocity);\n\n\n\nfunction $5e2bc7f73bde986d$export$90ceba2564a894f8(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) return [\n        elementOrSelector\n    ];\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) // TODO: Refactor to utils package\n        // invariant(\n        //     Boolean(scope.current),\n        //     \"Scope provided, but no element detected.\"\n        // )\n        root = scope.current;\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\n\nfunction $4c2737cf5ba8e521$export$d276bfce3b1077ca(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\n\nfunction $3d77a7dafe0ccd49$export$92b2aefc56600400(subject, keyframes, scope, selectorCache) {\n    if (typeof subject === \"string\" && (0, $4c2737cf5ba8e521$export$d276bfce3b1077ca)(keyframes)) return (0, $5e2bc7f73bde986d$export$90ceba2564a894f8)(subject, scope, selectorCache);\n    else if (subject instanceof NodeList) return Array.from(subject);\n    else if (Array.isArray(subject)) return subject;\n    else return [\n        subject\n    ];\n}\n\n\nfunction $aa9df1c18e828298$export$fcfa02e469c39006(duration, repeat, _repeatDelay) {\n    return duration * (repeat + 1);\n}\n\n\n/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */ function $a9d0c4de202c52be$export$83ccd85155ba9791(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") return next;\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) return Math.max(0, current + parseFloat(next));\n    else if (next === \"<\") return prev;\n    else return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n}\n\n\n\nfunction $44c7a8517a60de29$export$20e507e47fae79fd(arr, item) {\n    if (arr.indexOf(item) === -1) arr.push(item);\n}\nfunction $44c7a8517a60de29$export$fe2d9b4e03920b4c(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1) arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction $44c7a8517a60de29$export$ec937e64de6c1257([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\n\n\nfunction $1778810cfa2e493c$export$6f93cdbb78924b88(sequence, startTime, endTime) {\n    for(let i = 0; i < sequence.length; i++){\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            (0, $44c7a8517a60de29$export$fe2d9b4e03920b4c)(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction $1778810cfa2e493c$export$89dfa6760a9f76e7(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */ $1778810cfa2e493c$export$6f93cdbb78924b88(sequence, startTime, endTime);\n    for(let i = 0; i < keyframes.length; i++)sequence.push({\n        value: keyframes[i],\n        at: (0, $a9e22a3f98efa112$export$3bb0b4ff1037b8dd)(startTime, endTime, offset[i]),\n        easing: (0, $995d2e17496ee431$export$41c5e731255a462)(easing, i)\n    });\n}\n\n\n/**\n * Take an array of times that represent repeated keyframes. For instance\n * if we have original times of [0, 0.5, 1] then our repeated times will\n * be [0, 0.5, 1, 1, 1.5, 2]. Loop over the times and scale them back\n * down to a 0-1 scale.\n */ function $876fcc5a481c3156$export$989461f373b2c60a(times, repeat) {\n    for(let i = 0; i < times.length; i++)times[i] = times[i] / (repeat + 1);\n}\n\n\nfunction $6d2f5ff6b37908b9$export$66dd3fbf44e05bd9(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null) return 1;\n        if (b.value === null) return -1;\n        return 0;\n    } else return a.at - b.at;\n}\n\n\nconst $1bc1325d16f3db1e$var$defaultSegmentEasing = \"easeInOut\";\nconst $1bc1325d16f3db1e$var$MAX_REPEAT = 20;\nfunction $1bc1325d16f3db1e$export$1f0f44b51a4b2f73(sequence, { defaultTransition: defaultTransition = {}, ...sequenceTransition } = {}, scope, generators) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */ for(let i = 0; i < sequence.length; i++){\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */ if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        } else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, (0, $a9d0c4de202c52be$export$83ccd85155ba9791)(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */ if (transition.at !== undefined) currentTime = (0, $a9d0c4de202c52be$export$83ccd85155ba9791)(currentTime, transition.at, prevTime, timeLabels);\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */ let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numSubjects = 0)=>{\n            const valueKeyframesAsList = $1bc1325d16f3db1e$var$keyframesAsList(valueKeyframes);\n            const { delay: delay = 0, times: times = (0, $9834b5ef2cf2f4ed$export$24dbcec0b26e6d9d)(valueKeyframesAsList), type: type = \"keyframes\", repeat: repeat, repeatType: repeatType, repeatDelay: repeatDelay = 0, ...remainingTransition } = valueTransition;\n            let { ease: ease = defaultTransition.ease || \"easeOut\", duration: duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */ const calculatedDelay = typeof delay === \"function\" ? delay(elementIndex, numSubjects) : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */ const numKeyframes = valueKeyframesAsList.length;\n            const createGenerator = (0, $fd8d2a9f7ab45528$export$6ab7812f1bac68be)(type) ? type : generators === null || generators === void 0 ? void 0 : generators[type];\n            if (numKeyframes <= 2 && createGenerator) {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */ let absoluteDelta = 100;\n                if (numKeyframes === 2 && $1bc1325d16f3db1e$var$isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = {\n                    ...remainingTransition\n                };\n                if (duration !== undefined) springTransition.duration = (0, $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7)(duration);\n                const springEasing = (0, $5d635071c1d882be$export$7f1511d09ee75a99)(springTransition, absoluteDelta, createGenerator);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : duration = defaultDuration;\n            const startTime = currentTime + calculatedDelay;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */ if (times.length === 1 && times[0] === 0) times[1] = 1;\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */ const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && (0, $7c3816daf0a74789$export$dafee61230cf05c6)(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */ valueKeyframesAsList.length === 1 && valueKeyframesAsList.unshift(null);\n            /**\n             * Handle repeat options\n             */ if (repeat) {\n                (0, $66afa3c9bf43e7f2$export$f5708dca728d7177)(repeat < $1bc1325d16f3db1e$var$MAX_REPEAT, \"Repeat count too high, must be less than 20\");\n                duration = (0, $aa9df1c18e828298$export$fcfa02e469c39006)(duration, repeat);\n                const originalKeyframes = [\n                    ...valueKeyframesAsList\n                ];\n                const originalTimes = [\n                    ...times\n                ];\n                ease = Array.isArray(ease) ? [\n                    ...ease\n                ] : [\n                    ease\n                ];\n                const originalEase = [\n                    ...ease\n                ];\n                for(let repeatIndex = 0; repeatIndex < repeat; repeatIndex++){\n                    valueKeyframesAsList.push(...originalKeyframes);\n                    for(let keyframeIndex = 0; keyframeIndex < originalKeyframes.length; keyframeIndex++){\n                        times.push(originalTimes[keyframeIndex] + (repeatIndex + 1));\n                        ease.push(keyframeIndex === 0 ? \"linear\" : (0, $995d2e17496ee431$export$41c5e731255a462)(originalEase, keyframeIndex - 1));\n                    }\n                }\n                (0, $876fcc5a481c3156$export$989461f373b2c60a)(times, repeat);\n            }\n            const targetTime = startTime + duration;\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */ (0, $1778810cfa2e493c$export$89dfa6760a9f76e7)(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if ((0, $bdc57029e711ba86$export$605d60a2578142d3)(subject)) {\n            const subjectSequence = $1bc1325d16f3db1e$var$getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, $1bc1325d16f3db1e$var$getValueSequence(\"default\", subjectSequence));\n        } else {\n            const subjects = (0, $3d77a7dafe0ccd49$export$92b2aefc56600400)(subject, keyframes, scope, elementCache);\n            const numSubjects = subjects.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */ for(let subjectIndex = 0; subjectIndex < numSubjects; subjectIndex++){\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */ keyframes;\n                transition;\n                const thisSubject = subjects[subjectIndex];\n                const subjectSequence = $1bc1325d16f3db1e$var$getSubjectSequence(thisSubject, sequences);\n                for(const key in keyframes)resolveValueSequence(keyframes[key], $1bc1325d16f3db1e$export$7c1391340308742e(transition, key), $1bc1325d16f3db1e$var$getValueSequence(key, subjectSequence), subjectIndex, numSubjects);\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */ sequences.forEach((valueSequences, element)=>{\n        for(const key in valueSequences){\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */ valueSequence.sort((0, $6d2f5ff6b37908b9$export$66dd3fbf44e05bd9));\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */ for(let i = 0; i < valueSequence.length; i++){\n                const { at: at, value: value, easing: easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push((0, $ef49c9e1b212a303$export$504d7abb21fa8c9)(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */ if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift($1bc1325d16f3db1e$var$defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */ if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) animationDefinitions.set(element, {\n                keyframes: {},\n                transition: {}\n            });\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction $1bc1325d16f3db1e$var$getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction $1bc1325d16f3db1e$var$getValueSequence(name, sequences) {\n    if (!sequences[name]) sequences[name] = [];\n    return sequences[name];\n}\nfunction $1bc1325d16f3db1e$var$keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [\n        keyframes\n    ];\n}\nfunction $1bc1325d16f3db1e$export$7c1391340308742e(transition, key) {\n    return transition && transition[key] ? {\n        ...transition,\n        ...transition[key]\n    } : {\n        ...transition\n    };\n}\nconst $1bc1325d16f3db1e$var$isNumber = (keyframe)=>typeof keyframe === \"number\";\nconst $1bc1325d16f3db1e$var$isNumberKeyframesArray = (keyframes)=>keyframes.every($1bc1325d16f3db1e$var$isNumber);\n\n\n\nconst $e40e1cabb60060bc$export$bc2a978a17abfdde = new WeakMap();\n\n\n\n\nfunction $084c484511e70f62$export$7c1391340308742e(transition, key) {\n    return transition ? transition[key] || transition[\"default\"] || transition : undefined;\n}\n\n\n/**\n * Generate a list of every possible transform key.\n */ const $5912f55e0acfeb49$export$280dc01950909d86 = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\"\n];\n/**\n * A quick lookup for transform props.\n */ const $5912f55e0acfeb49$export$7b42a0094fb00b6e = new Set($5912f55e0acfeb49$export$280dc01950909d86);\n\n\nconst $9cde0c46eca3fa0c$export$c66c0d5db2a205d = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...(0, $5912f55e0acfeb49$export$280dc01950909d86)\n]);\n\n\nconst $b11ae2925bfd207e$export$9153ad4c4999f4a0 = (v)=>{\n    return Array.isArray(v);\n};\n\n\nconst $53c1bc2b7de18789$export$2f308ad9864b3ac9 = (v)=>{\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst $53c1bc2b7de18789$export$5485128c47bd48bb = (v)=>{\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return (0, $b11ae2925bfd207e$export$9153ad4c4999f4a0)(v) ? v[v.length - 1] || 0 : v;\n};\n\n\nconst $201529ac06387f34$export$dd826089e3c5e502 = {\n    skipAnimations: false,\n    useManualTiming: false\n};\n\n\n\n\n\nfunction $25d60b4c77e207dd$export$b995e5e85f5c8289(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */ let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */ let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */ const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */ schedule: (callback, keepAlive = false, immediate = false)=>{\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive) toKeepAlive.add(callback);\n            if (!queue.has(callback)) queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */ cancel: (callback)=>{\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */ process: (frameData)=>{\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */ if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [\n                nextFrame,\n                thisFrame\n            ];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        }\n    };\n    return step;\n}\n\n\nconst $94fb5e84bcc9dfbe$export$71ecace0a033b35a = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\"\n];\nconst $94fb5e84bcc9dfbe$var$maxElapsed = 40;\nfunction $94fb5e84bcc9dfbe$export$510b0596a933801a(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false\n    };\n    const flagRunNextFrame = ()=>runNextFrame = true;\n    const steps = $94fb5e84bcc9dfbe$export$71ecace0a033b35a.reduce((acc, key)=>{\n        acc[key] = (0, $25d60b4c77e207dd$export$b995e5e85f5c8289)(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read: read, resolveKeyframes: resolveKeyframes, update: update, preRender: preRender, render: render, postRender: postRender } = steps;\n    const processBatch = ()=>{\n        const timestamp = (0, $201529ac06387f34$export$dd826089e3c5e502).useManualTiming ? state.timestamp : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed ? 1000 / 60 : Math.max(Math.min(timestamp - state.timestamp, $94fb5e84bcc9dfbe$var$maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = ()=>{\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) scheduleNextBatch(processBatch);\n    };\n    const schedule = $94fb5e84bcc9dfbe$export$71ecace0a033b35a.reduce((acc, key)=>{\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false)=>{\n            if (!runNextFrame) wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process)=>{\n        for(let i = 0; i < $94fb5e84bcc9dfbe$export$71ecace0a033b35a.length; i++)steps[$94fb5e84bcc9dfbe$export$71ecace0a033b35a[i]].cancel(process);\n    };\n    return {\n        schedule: schedule,\n        cancel: cancel,\n        state: state,\n        steps: steps\n    };\n}\n\n\nconst { schedule: $cd672ddb30793005$export$2cef06c20297c17d, cancel: $cd672ddb30793005$export$ec99c0ef4978dccb, state: $cd672ddb30793005$export$fff89137e9e818ce, steps: $cd672ddb30793005$export$1811c3a7e3af92f0 } = (0, $94fb5e84bcc9dfbe$export$510b0596a933801a)(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : (0, $784484be748b616c$export$8793edee2d425525), true);\n\n\nlet $98a6a7cf3d400a23$var$now;\nfunction $98a6a7cf3d400a23$var$clearTime() {\n    $98a6a7cf3d400a23$var$now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */ const $98a6a7cf3d400a23$export$2da9be4cfdb689b1 = {\n    now: ()=>{\n        if ($98a6a7cf3d400a23$var$now === undefined) $98a6a7cf3d400a23$export$2da9be4cfdb689b1.set((0, $cd672ddb30793005$export$fff89137e9e818ce).isProcessing || (0, $201529ac06387f34$export$dd826089e3c5e502).useManualTiming ? (0, $cd672ddb30793005$export$fff89137e9e818ce).timestamp : performance.now());\n        return $98a6a7cf3d400a23$var$now;\n    },\n    set: (newTime)=>{\n        $98a6a7cf3d400a23$var$now = newTime;\n        queueMicrotask($98a6a7cf3d400a23$var$clearTime);\n    }\n};\n\n\n\nclass $56d9c7139fc5eb24$export$e7dff9482a5fd23c {\n    constructor(){\n        this.subscriptions = [];\n    }\n    add(handler) {\n        (0, $44c7a8517a60de29$export$20e507e47fae79fd)(this.subscriptions, handler);\n        return ()=>(0, $44c7a8517a60de29$export$fe2d9b4e03920b4c)(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions) return;\n        if (numSubscriptions === 1) /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */ this.subscriptions[0](a, b, c);\n        else for(let i = 0; i < numSubscriptions; i++){\n            /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */ const handler = this.subscriptions[i];\n            handler && handler(a, b, c);\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\n\n\n\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */ const $ca6243e2189ab444$var$MAX_VELOCITY_DELTA = 30;\nconst $ca6243e2189ab444$var$isFloat = (value)=>{\n    return !isNaN(parseFloat(value));\n};\nconst $ca6243e2189ab444$export$67fcd818a264039d = {\n    current: undefined\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */ class $ca6243e2189ab444$export$8cea36d14ee64562 {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */ constructor(init, options = {}){\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */ this.version = \"12.0.11\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */ this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */ this.events = {};\n        this.updateAndNotify = (v, render = true)=>{\n            const currentTime = (0, $98a6a7cf3d400a23$export$2da9be4cfdb689b1).now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */ if (this.updatedAt !== currentTime) this.setPrevFrameValue();\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) this.events.change.notify(this.current);\n            // Update render subscribers\n            if (render && this.events.renderRequest) this.events.renderRequest.notify(this.current);\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = (0, $98a6a7cf3d400a23$export$2da9be4cfdb689b1).now();\n        if (this.canTrackVelocity === null && current !== undefined) this.canTrackVelocity = $ca6243e2189ab444$var$isFloat(this.current);\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */ onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) this.events[eventName] = new (0, $56d9c7139fc5eb24$export$e7dff9482a5fd23c)();\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") return ()=>{\n            unsubscribe();\n            /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */ (0, $cd672ddb30793005$export$2cef06c20297c17d).read(()=>{\n                if (!this.events.change.getSize()) this.stop();\n            });\n        };\n        return unsubscribe;\n    }\n    clearListeners() {\n        for(const eventManagers in this.events)this.events[eventManagers].clear();\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */ attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */ set(v, render = true) {\n        if (!render || !this.passiveEffect) this.updateAndNotify(v, render);\n        else this.passiveEffect(v, this.updateAndNotify);\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */ jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect) this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */ get() {\n        if ($ca6243e2189ab444$export$67fcd818a264039d.current) $ca6243e2189ab444$export$67fcd818a264039d.current.push(this);\n        return this.current;\n    }\n    /**\n     * @public\n     */ getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */ getVelocity() {\n        const currentTime = (0, $98a6a7cf3d400a23$export$2da9be4cfdb689b1).now();\n        if (!this.canTrackVelocity || this.prevFrameValue === undefined || currentTime - this.updatedAt > $ca6243e2189ab444$var$MAX_VELOCITY_DELTA) return 0;\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, $ca6243e2189ab444$var$MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return (0, $1380f062c1a4c678$export$eab0632f7ad4f9d7)(parseFloat(this.current) - parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */ start(startAnimation) {\n        this.stop();\n        return new Promise((resolve)=>{\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) this.events.animationStart.notify();\n        }).then(()=>{\n            if (this.events.animationComplete) this.events.animationComplete.notify();\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */ stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) this.events.animationCancel.notify();\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */ isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */ destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) this.stopPassiveEffect();\n    }\n}\nfunction $ca6243e2189ab444$export$ce8bdc721e76545f(init, options) {\n    return new $ca6243e2189ab444$export$8cea36d14ee64562(init, options);\n}\n\n\nfunction $f26f5d046ac41cfd$var$getValueState(visualElement) {\n    const state = [\n        {},\n        {}\n    ];\n    visualElement === null || visualElement === void 0 || visualElement.values.forEach((value, key)=>{\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction $f26f5d046ac41cfd$export$d68f140c4d9b48bc(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */ if (typeof definition === \"function\") {\n        const [current, velocity] = $f26f5d046ac41cfd$var$getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */ if (typeof definition === \"string\") definition = props.variants && props.variants[definition];\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */ if (typeof definition === \"function\") {\n        const [current, velocity] = $f26f5d046ac41cfd$var$getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\n\nfunction $472ccca89fbf9172$export$7b1b1c981f4f0558(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return (0, $f26f5d046ac41cfd$export$d68f140c4d9b48bc)(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */ function $c797bc366c9b6fb1$var$setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) visualElement.getValue(key).set(value);\n    else visualElement.addValue(key, (0, $ca6243e2189ab444$export$ce8bdc721e76545f)(value));\n}\nfunction $c797bc366c9b6fb1$export$1f61c53461aff4a5(visualElement, definition) {\n    const resolved = (0, $472ccca89fbf9172$export$7b1b1c981f4f0558)(visualElement, definition);\n    let { transitionEnd: transitionEnd = {}, transition: transition = {}, ...target } = resolved || {};\n    target = {\n        ...target,\n        ...transitionEnd\n    };\n    for(const key in target){\n        const value = (0, $53c1bc2b7de18789$export$5485128c47bd48bb)(target[key]);\n        $c797bc366c9b6fb1$var$setMotionValue(visualElement, key, value);\n    }\n}\n\n\n\nfunction $cd6d8f38cdce61e8$export$98397f3adbf6259f(value) {\n    return Boolean((0, $bdc57029e711ba86$export$605d60a2578142d3)(value) && value.add);\n}\n\n\nfunction $472d68ef6638e027$export$3ac5aed310be0bee(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */ if ((0, $cd6d8f38cdce61e8$export$98397f3adbf6259f)(willChange)) return willChange.add(key);\n}\n\n\n/**\n * Convert camelCase to dash-case properties.\n */ const $a06e0e62438326de$export$9fd24a634729c672 = (str)=>str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\n\nconst $ca4aed32a7be926f$export$ed7b8fa9dbf0105d = \"framerAppearId\";\nconst $ca4aed32a7be926f$export$8592e1c077c890a6 = \"data-\" + (0, $a06e0e62438326de$export$9fd24a634729c672)($ca4aed32a7be926f$export$ed7b8fa9dbf0105d);\n\n\nfunction $81eb25fa0638315c$export$5f8d21e84d1d84fc(visualElement) {\n    return visualElement.props[0, $ca4aed32a7be926f$export$8592e1c077c890a6];\n}\n\n\n\n\n\n\n\n\nconst $5285b300c864cfef$export$888a3d84909f9e3d = {\n    current: false\n};\n\n\n\n\n\n\nfunction $c5545553b2eeb845$export$5bd0fcbc73622e13(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\n\nconst $f67571d677c611ce$export$ff43f99925d7366b = (easing)=>Array.isArray(easing) && typeof easing[0] === \"number\";\n\n\n\n\n/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */ const $939370e4ca1abf64$export$e3ad02c335474dee = {\n    linearEasing: undefined\n};\n\n\nfunction $9486a5fa0da5e6ed$export$1964673d5ec13c3a(callback, supportsFlag) {\n    const memoized = (0, $b0dedcc96679f76e$export$7c73462e0d25e514)(callback);\n    return ()=>{\n        var _a;\n        return (_a = (0, $939370e4ca1abf64$export$e3ad02c335474dee)[supportsFlag]) !== null && _a !== void 0 ? _a : memoized();\n    };\n}\n\n\nconst $e6437dbefbc3c076$export$866c1d07a1ac2ab = /*@__PURE__*/ (0, $9486a5fa0da5e6ed$export$1964673d5ec13c3a)(()=>{\n    try {\n        document.createElement(\"div\").animate({\n            opacity: 0\n        }, {\n            easing: \"linear(0, 1)\"\n        });\n    } catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\n\n\nfunction $47be5444287118bb$export$fcdd8f3f2160beda(easing) {\n    return Boolean(typeof easing === \"function\" && (0, $e6437dbefbc3c076$export$866c1d07a1ac2ab)() || !easing || typeof easing === \"string\" && (easing in $47be5444287118bb$export$2cf569f5e2221176 || (0, $e6437dbefbc3c076$export$866c1d07a1ac2ab)()) || (0, $f67571d677c611ce$export$ff43f99925d7366b)(easing) || Array.isArray(easing) && easing.every($47be5444287118bb$export$fcdd8f3f2160beda));\n}\nconst $47be5444287118bb$export$2523b8f0bd8f44cb = ([a, b, c, d])=>`cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst $47be5444287118bb$export$2cf569f5e2221176 = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ $47be5444287118bb$export$2523b8f0bd8f44cb([\n        0,\n        0.65,\n        0.55,\n        1\n    ]),\n    circOut: /*@__PURE__*/ $47be5444287118bb$export$2523b8f0bd8f44cb([\n        0.55,\n        0,\n        1,\n        0.45\n    ]),\n    backIn: /*@__PURE__*/ $47be5444287118bb$export$2523b8f0bd8f44cb([\n        0.31,\n        0.01,\n        0.66,\n        -0.59\n    ]),\n    backOut: /*@__PURE__*/ $47be5444287118bb$export$2523b8f0bd8f44cb([\n        0.33,\n        1.53,\n        0.69,\n        0.99\n    ])\n};\nfunction $47be5444287118bb$export$916ea73bcd3a6030(easing, duration) {\n    if (!easing) return undefined;\n    else if (typeof easing === \"function\" && (0, $e6437dbefbc3c076$export$866c1d07a1ac2ab)()) return (0, $b2958e3c2019bdf2$export$66d3851e2b1ec912)(easing, duration);\n    else if ((0, $f67571d677c611ce$export$ff43f99925d7366b)(easing)) return $47be5444287118bb$export$2523b8f0bd8f44cb(easing);\n    else if (Array.isArray(easing)) return easing.map((segmentEasing)=>$47be5444287118bb$export$916ea73bcd3a6030(segmentEasing, duration) || $47be5444287118bb$export$2cf569f5e2221176.easeOut);\n    else return $47be5444287118bb$export$2cf569f5e2221176[easing];\n}\n\n\n\n\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/ // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst $c2c66fca466c46bf$var$calcBezier = (t, a1, a2)=>(((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t;\nconst $c2c66fca466c46bf$var$subdivisionPrecision = 0.0000001;\nconst $c2c66fca466c46bf$var$subdivisionMaxIterations = 12;\nfunction $c2c66fca466c46bf$var$binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = $c2c66fca466c46bf$var$calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) upperBound = currentT;\n        else lowerBound = currentT;\n    }while (Math.abs(currentX) > $c2c66fca466c46bf$var$subdivisionPrecision && ++i < $c2c66fca466c46bf$var$subdivisionMaxIterations);\n    return currentT;\n}\nfunction $c2c66fca466c46bf$export$2c575fa1d20488bd(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2) return 0, $784484be748b616c$export$8793edee2d425525;\n    const getTForX = (aX)=>$c2c66fca466c46bf$var$binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t)=>t === 0 || t === 1 ? t : $c2c66fca466c46bf$var$calcBezier(getTForX(t), mY1, mY2);\n}\n\n\n// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst $f2c6839e799d3cd4$export$f946554fb8aeaf0d = (easing)=>(p)=>p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\n\n// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst $6909917a82819a64$export$2c07eeff45156d4d = (easing)=>(p)=>1 - easing(1 - p);\n\n\nconst $10f899f83036f369$export$77edfce482316a60 = /*@__PURE__*/ (0, $c2c66fca466c46bf$export$2c575fa1d20488bd)(0.33, 1.53, 0.69, 0.99);\nconst $10f899f83036f369$export$b01116c84cdfe1a2 = /*@__PURE__*/ (0, $6909917a82819a64$export$2c07eeff45156d4d)($10f899f83036f369$export$77edfce482316a60);\nconst $10f899f83036f369$export$ddc5fd596f6c71b2 = /*@__PURE__*/ (0, $f2c6839e799d3cd4$export$f946554fb8aeaf0d)($10f899f83036f369$export$b01116c84cdfe1a2);\n\n\nconst $f07eca3a74529833$export$6b0af63b873d419e = (p)=>(p *= 2) < 1 ? 0.5 * (0, $10f899f83036f369$export$b01116c84cdfe1a2)(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\n\n\n\n\nconst $c8a3318a0eecf080$export$e444123e42d03385 = (p)=>1 - Math.sin(Math.acos(p));\nconst $c8a3318a0eecf080$export$c8d67a19199d1a50 = (0, $6909917a82819a64$export$2c07eeff45156d4d)($c8a3318a0eecf080$export$e444123e42d03385);\nconst $c8a3318a0eecf080$export$30d3455eee55bed5 = (0, $f2c6839e799d3cd4$export$f946554fb8aeaf0d)($c8a3318a0eecf080$export$e444123e42d03385);\n\n\n/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */ const $f3d844a9777b9222$export$ade84c85e44a6cb1 = (v)=>/^0[^.\\s]+$/u.test(v);\n\n\nfunction $2dae10ab3851d73f$export$e56af863d5645d5f(value) {\n    if (typeof value === \"number\") return value === 0;\n    else if (value !== null) return value === \"none\" || value === \"0\" || (0, $f3d844a9777b9222$export$ade84c85e44a6cb1)(value);\n    else return true;\n}\n\n\n\n\n\nconst $f0b1c3723c46295c$export$98e628dec113755e = {\n    test: (v)=>typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v)=>v\n};\nconst $f0b1c3723c46295c$export$58f0f39f63f3cf42 = {\n    ...$f0b1c3723c46295c$export$98e628dec113755e,\n    transform: (v)=>(0, $61505dd9bdaf733e$export$7d15b64cf5a3a4c4)(0, 1, v)\n};\nconst $f0b1c3723c46295c$export$dcdf75081b88279d = {\n    ...$f0b1c3723c46295c$export$98e628dec113755e,\n    default: 1\n};\n\n\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst $c0af9898baef953e$export$83d2e9e3e4ee39ed = (v)=>Math.round(v * 100000) / 100000;\n\n\nconst $c74a6b808b7e4f99$export$2444ca58c08448e4 = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\n\nfunction $d02c800d510c0c31$export$b931b78cbb3caf86(v) {\n    return v == null;\n}\n\n\nconst $391018cbad39caec$export$ed808ff6ecd39e8d = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */ const $177cdf9831fae6dc$export$2c8400d58aca05e = (type, testProp)=>(v)=>{\n        return Boolean(typeof v === \"string\" && (0, $391018cbad39caec$export$ed808ff6ecd39e8d).test(v) && v.startsWith(type) || testProp && !(0, $d02c800d510c0c31$export$b931b78cbb3caf86)(v) && Object.prototype.hasOwnProperty.call(v, testProp));\n    };\nconst $177cdf9831fae6dc$export$73d6f35be992df24 = (aName, bName, cName)=>(v)=>{\n        if (typeof v !== \"string\") return v;\n        const [a, b, c, alpha] = v.match((0, $c74a6b808b7e4f99$export$2444ca58c08448e4));\n        return {\n            [aName]: parseFloat(a),\n            [bName]: parseFloat(b),\n            [cName]: parseFloat(c),\n            alpha: alpha !== undefined ? parseFloat(alpha) : 1\n        };\n    };\n\n\nconst $b43d7766c2461577$var$clampRgbUnit = (v)=>(0, $61505dd9bdaf733e$export$7d15b64cf5a3a4c4)(0, 255, v);\nconst $b43d7766c2461577$export$7a99c86b5b1f4c9e = {\n    ...(0, $f0b1c3723c46295c$export$98e628dec113755e),\n    transform: (v)=>Math.round($b43d7766c2461577$var$clampRgbUnit(v))\n};\nconst $b43d7766c2461577$export$4e46ac54fc82cf3b = {\n    test: /*@__PURE__*/ (0, $177cdf9831fae6dc$export$2c8400d58aca05e)(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ (0, $177cdf9831fae6dc$export$73d6f35be992df24)(\"red\", \"green\", \"blue\"),\n    transform: ({ red: red, green: green, blue: blue, alpha: alpha$1 = 1 })=>\"rgba(\" + $b43d7766c2461577$export$7a99c86b5b1f4c9e.transform(red) + \", \" + $b43d7766c2461577$export$7a99c86b5b1f4c9e.transform(green) + \", \" + $b43d7766c2461577$export$7a99c86b5b1f4c9e.transform(blue) + \", \" + (0, $c0af9898baef953e$export$83d2e9e3e4ee39ed)((0, $f0b1c3723c46295c$export$58f0f39f63f3cf42).transform(alpha$1)) + \")\"\n};\n\n\n\nfunction $d57a99a0e704c16e$var$parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n    // Or we have 3 characters, ie #F00\n    } else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1\n    };\n}\nconst $d57a99a0e704c16e$export$834dfc94dde4b3d8 = {\n    test: /*@__PURE__*/ (0, $177cdf9831fae6dc$export$2c8400d58aca05e)(\"#\"),\n    parse: $d57a99a0e704c16e$var$parseHex,\n    transform: (0, $b43d7766c2461577$export$4e46ac54fc82cf3b).transform\n};\n\n\n\nconst $a3e3e887e365f48f$var$createUnitType = (unit)=>({\n        test: (v)=>typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n        parse: parseFloat,\n        transform: (v)=>`${v}${unit}`\n    });\nconst $a3e3e887e365f48f$export$41fc368e1a942b97 = /*@__PURE__*/ $a3e3e887e365f48f$var$createUnitType(\"deg\");\nconst $a3e3e887e365f48f$export$626336c2cd4b14de = /*@__PURE__*/ $a3e3e887e365f48f$var$createUnitType(\"%\");\nconst $a3e3e887e365f48f$export$91c0eda1d06bf008 = /*@__PURE__*/ $a3e3e887e365f48f$var$createUnitType(\"px\");\nconst $a3e3e887e365f48f$export$f91e8c45a95a32f2 = /*@__PURE__*/ $a3e3e887e365f48f$var$createUnitType(\"vh\");\nconst $a3e3e887e365f48f$export$aed3d7b7d206c196 = /*@__PURE__*/ $a3e3e887e365f48f$var$createUnitType(\"vw\");\nconst $a3e3e887e365f48f$export$44e2e1705876d7ed = {\n    ...$a3e3e887e365f48f$export$626336c2cd4b14de,\n    parse: (v)=>$a3e3e887e365f48f$export$626336c2cd4b14de.parse(v) / 100,\n    transform: (v)=>$a3e3e887e365f48f$export$626336c2cd4b14de.transform(v * 100)\n};\n\n\n\n\nconst $12e46b2a1af36269$export$810b04175080204c = {\n    test: /*@__PURE__*/ (0, $177cdf9831fae6dc$export$2c8400d58aca05e)(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ (0, $177cdf9831fae6dc$export$73d6f35be992df24)(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue: hue, saturation: saturation, lightness: lightness, alpha: alpha$1 = 1 })=>{\n        return \"hsla(\" + Math.round(hue) + \", \" + (0, $a3e3e887e365f48f$export$626336c2cd4b14de).transform((0, $c0af9898baef953e$export$83d2e9e3e4ee39ed)(saturation)) + \", \" + (0, $a3e3e887e365f48f$export$626336c2cd4b14de).transform((0, $c0af9898baef953e$export$83d2e9e3e4ee39ed)(lightness)) + \", \" + (0, $c0af9898baef953e$export$83d2e9e3e4ee39ed)((0, $f0b1c3723c46295c$export$58f0f39f63f3cf42).transform(alpha$1)) + \")\";\n    }\n};\n\n\n\nconst $49036ae22fb7dd0b$export$35e9368ef982300f = {\n    test: (v)=>(0, $b43d7766c2461577$export$4e46ac54fc82cf3b).test(v) || (0, $d57a99a0e704c16e$export$834dfc94dde4b3d8).test(v) || (0, $12e46b2a1af36269$export$810b04175080204c).test(v),\n    parse: (v)=>{\n        if ((0, $b43d7766c2461577$export$4e46ac54fc82cf3b).test(v)) return (0, $b43d7766c2461577$export$4e46ac54fc82cf3b).parse(v);\n        else if ((0, $12e46b2a1af36269$export$810b04175080204c).test(v)) return (0, $12e46b2a1af36269$export$810b04175080204c).parse(v);\n        else return (0, $d57a99a0e704c16e$export$834dfc94dde4b3d8).parse(v);\n    },\n    transform: (v)=>{\n        return typeof v === \"string\" ? v : v.hasOwnProperty(\"red\") ? (0, $b43d7766c2461577$export$4e46ac54fc82cf3b).transform(v) : (0, $12e46b2a1af36269$export$810b04175080204c).transform(v);\n    }\n};\n\n\nconst $67679a030195f642$export$740b69c5fad25dba = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\n\n\n\nfunction $a3f9111a4eded79d$var$test(v) {\n    var _a, _b;\n    return isNaN(v) && typeof v === \"string\" && (((_a = v.match((0, $c74a6b808b7e4f99$export$2444ca58c08448e4))) === null || _a === void 0 ? void 0 : _a.length) || 0) + (((_b = v.match((0, $67679a030195f642$export$740b69c5fad25dba))) === null || _b === void 0 ? void 0 : _b.length) || 0) > 0;\n}\nconst $a3f9111a4eded79d$var$NUMBER_TOKEN = \"number\";\nconst $a3f9111a4eded79d$var$COLOR_TOKEN = \"color\";\nconst $a3f9111a4eded79d$var$VAR_TOKEN = \"var\";\nconst $a3f9111a4eded79d$var$VAR_FUNCTION_TOKEN = \"var(\";\nconst $a3f9111a4eded79d$var$SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst $a3f9111a4eded79d$var$complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction $a3f9111a4eded79d$export$b61fc7c44bf646d5(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: []\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace($a3f9111a4eded79d$var$complexRegex, (parsedValue)=>{\n        if ((0, $49036ae22fb7dd0b$export$35e9368ef982300f).test(parsedValue)) {\n            indexes.color.push(i);\n            types.push($a3f9111a4eded79d$var$COLOR_TOKEN);\n            values.push((0, $49036ae22fb7dd0b$export$35e9368ef982300f).parse(parsedValue));\n        } else if (parsedValue.startsWith($a3f9111a4eded79d$var$VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push($a3f9111a4eded79d$var$VAR_TOKEN);\n            values.push(parsedValue);\n        } else {\n            indexes.number.push(i);\n            types.push($a3f9111a4eded79d$var$NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return $a3f9111a4eded79d$var$SPLIT_TOKEN;\n    });\n    const split = tokenised.split($a3f9111a4eded79d$var$SPLIT_TOKEN);\n    return {\n        values: values,\n        split: split,\n        indexes: indexes,\n        types: types\n    };\n}\nfunction $a3f9111a4eded79d$var$parseComplexValue(v) {\n    return $a3f9111a4eded79d$export$b61fc7c44bf646d5(v).values;\n}\nfunction $a3f9111a4eded79d$var$createTransformer(source) {\n    const { split: split, types: types } = $a3f9111a4eded79d$export$b61fc7c44bf646d5(source);\n    const numSections = split.length;\n    return (v)=>{\n        let output = \"\";\n        for(let i = 0; i < numSections; i++){\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === $a3f9111a4eded79d$var$NUMBER_TOKEN) output += (0, $c0af9898baef953e$export$83d2e9e3e4ee39ed)(v[i]);\n                else if (type === $a3f9111a4eded79d$var$COLOR_TOKEN) output += (0, $49036ae22fb7dd0b$export$35e9368ef982300f).transform(v[i]);\n                else output += v[i];\n            }\n        }\n        return output;\n    };\n}\nconst $a3f9111a4eded79d$var$convertNumbersToZero = (v)=>typeof v === \"number\" ? 0 : v;\nfunction $a3f9111a4eded79d$var$getAnimatableNone(v) {\n    const parsed = $a3f9111a4eded79d$var$parseComplexValue(v);\n    const transformer = $a3f9111a4eded79d$var$createTransformer(v);\n    return transformer(parsed.map($a3f9111a4eded79d$var$convertNumbersToZero));\n}\nconst $a3f9111a4eded79d$export$83a0e34f1302825b = {\n    test: $a3f9111a4eded79d$var$test,\n    parse: $a3f9111a4eded79d$var$parseComplexValue,\n    createTransformer: $a3f9111a4eded79d$var$createTransformer,\n    getAnimatableNone: $a3f9111a4eded79d$var$getAnimatableNone\n};\n\n\n\n\n\n/**\n * Properties that should default to 1 or 100%\n */ const $e1a0a2d93a2765cb$var$maxDefaults = new Set([\n    \"brightness\",\n    \"contrast\",\n    \"saturate\",\n    \"opacity\"\n]);\nfunction $e1a0a2d93a2765cb$var$applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\") return v;\n    const [number] = value.match((0, $c74a6b808b7e4f99$export$2444ca58c08448e4)) || [];\n    if (!number) return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = $e1a0a2d93a2765cb$var$maxDefaults.has(name) ? 1 : 0;\n    if (number !== value) defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst $e1a0a2d93a2765cb$var$functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst $e1a0a2d93a2765cb$export$3dea766d36a8935f = {\n    ...(0, $a3f9111a4eded79d$export$83a0e34f1302825b),\n    getAnimatableNone: (v)=>{\n        const functions = v.match($e1a0a2d93a2765cb$var$functionRegex);\n        return functions ? functions.map($e1a0a2d93a2765cb$var$applyDefaultFilter).join(\" \") : v;\n    }\n};\n\n\n\n\n\n\n\nconst $863cb7e349ffe8cc$export$2fb74b0a4e7d7c4a = {\n    // Border props\n    borderWidth: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    borderTopWidth: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    borderRightWidth: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    borderBottomWidth: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    borderLeftWidth: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    borderRadius: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    radius: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    borderTopLeftRadius: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    borderTopRightRadius: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    borderBottomRightRadius: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    borderBottomLeftRadius: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    // Positioning props\n    width: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    maxWidth: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    height: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    maxHeight: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    top: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    right: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    bottom: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    left: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    // Spacing props\n    padding: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    paddingTop: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    paddingRight: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    paddingBottom: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    paddingLeft: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    margin: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    marginTop: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    marginRight: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    marginBottom: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    marginLeft: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    // Misc\n    backgroundPositionX: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    backgroundPositionY: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008)\n};\n\n\n\n\nconst $e22644e7638a4063$export$f2e4285fee37e26 = {\n    rotate: (0, $a3e3e887e365f48f$export$41fc368e1a942b97),\n    rotateX: (0, $a3e3e887e365f48f$export$41fc368e1a942b97),\n    rotateY: (0, $a3e3e887e365f48f$export$41fc368e1a942b97),\n    rotateZ: (0, $a3e3e887e365f48f$export$41fc368e1a942b97),\n    scale: $f0b1c3723c46295c$export$dcdf75081b88279d,\n    scaleX: (0, $f0b1c3723c46295c$export$dcdf75081b88279d),\n    scaleY: (0, $f0b1c3723c46295c$export$dcdf75081b88279d),\n    scaleZ: (0, $f0b1c3723c46295c$export$dcdf75081b88279d),\n    skew: (0, $a3e3e887e365f48f$export$41fc368e1a942b97),\n    skewX: (0, $a3e3e887e365f48f$export$41fc368e1a942b97),\n    skewY: (0, $a3e3e887e365f48f$export$41fc368e1a942b97),\n    distance: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    translateX: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    translateY: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    translateZ: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    x: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    y: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    z: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    perspective: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    transformPerspective: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    opacity: (0, $f0b1c3723c46295c$export$58f0f39f63f3cf42),\n    originX: (0, $a3e3e887e365f48f$export$44e2e1705876d7ed),\n    originY: (0, $a3e3e887e365f48f$export$44e2e1705876d7ed),\n    originZ: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008)\n};\n\n\n\nconst $94633ebcc37af2a3$export$7d260a2a5f8bc19e = {\n    ...(0, $f0b1c3723c46295c$export$98e628dec113755e),\n    transform: Math.round\n};\n\n\nconst $caf5d058e9bd78f0$export$eec14432cd1cb67b = {\n    ...(0, $863cb7e349ffe8cc$export$2fb74b0a4e7d7c4a),\n    ...(0, $e22644e7638a4063$export$f2e4285fee37e26),\n    zIndex: (0, $94633ebcc37af2a3$export$7d260a2a5f8bc19e),\n    size: (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    // SVG\n    fillOpacity: (0, $f0b1c3723c46295c$export$58f0f39f63f3cf42),\n    strokeOpacity: (0, $f0b1c3723c46295c$export$58f0f39f63f3cf42),\n    numOctaves: (0, $94633ebcc37af2a3$export$7d260a2a5f8bc19e)\n};\n\n\n/**\n * A map of default value types for common values\n */ const $265ca4744df72a43$export$98cd7c72c5a731fb = {\n    ...(0, $caf5d058e9bd78f0$export$eec14432cd1cb67b),\n    color: // Color props\n    $49036ae22fb7dd0b$export$35e9368ef982300f,\n    backgroundColor: (0, $49036ae22fb7dd0b$export$35e9368ef982300f),\n    outlineColor: (0, $49036ae22fb7dd0b$export$35e9368ef982300f),\n    fill: (0, $49036ae22fb7dd0b$export$35e9368ef982300f),\n    stroke: (0, $49036ae22fb7dd0b$export$35e9368ef982300f),\n    // Border props\n    borderColor: (0, $49036ae22fb7dd0b$export$35e9368ef982300f),\n    borderTopColor: (0, $49036ae22fb7dd0b$export$35e9368ef982300f),\n    borderRightColor: (0, $49036ae22fb7dd0b$export$35e9368ef982300f),\n    borderBottomColor: (0, $49036ae22fb7dd0b$export$35e9368ef982300f),\n    borderLeftColor: (0, $49036ae22fb7dd0b$export$35e9368ef982300f),\n    filter: $e1a0a2d93a2765cb$export$3dea766d36a8935f,\n    WebkitFilter: (0, $e1a0a2d93a2765cb$export$3dea766d36a8935f)\n};\n/**\n * Gets the default ValueType for the provided value key\n */ const $265ca4744df72a43$export$67d1babe0338d23b = (key)=>$265ca4744df72a43$export$98cd7c72c5a731fb[key];\n\n\nfunction $cb03576e54dad22d$export$cea0cedcb94873b5(key, value) {\n    let defaultValueType = (0, $265ca4744df72a43$export$67d1babe0338d23b)(key);\n    if (defaultValueType !== (0, $e1a0a2d93a2765cb$export$3dea766d36a8935f)) defaultValueType = (0, $a3f9111a4eded79d$export$83a0e34f1302825b);\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : undefined;\n}\n\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */ const $2dce6f8f0459cf3b$var$invalidTemplates = new Set([\n    \"auto\",\n    \"none\",\n    \"0\"\n]);\nfunction $2dce6f8f0459cf3b$export$8cc4958f8e540f37(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while(i < unresolvedKeyframes.length && !animatableTemplate){\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" && !$2dce6f8f0459cf3b$var$invalidTemplates.has(keyframe) && (0, $a3f9111a4eded79d$export$b61fc7c44bf646d5)(keyframe).values.length) animatableTemplate = unresolvedKeyframes[i];\n        i++;\n    }\n    if (animatableTemplate && name) for (const noneIndex of noneKeyframeIndexes)unresolvedKeyframes[noneIndex] = (0, $cb03576e54dad22d$export$cea0cedcb94873b5)(name, animatableTemplate);\n}\n\n\n\n\n\nconst $1b02bf129d2c9258$export$8e5250d1aa9bf370 = (v)=>v === (0, $f0b1c3723c46295c$export$98e628dec113755e) || v === (0, $a3e3e887e365f48f$export$91c0eda1d06bf008);\nconst $1b02bf129d2c9258$var$getPosFromMatrix = (matrix, pos)=>parseFloat(matrix.split(\", \")[pos]);\nconst $1b02bf129d2c9258$var$getTranslateFromMatrix = (pos2, pos3)=>(_bbox, { transform: transform })=>{\n        if (transform === \"none\" || !transform) return 0;\n        const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n        if (matrix3d) return $1b02bf129d2c9258$var$getPosFromMatrix(matrix3d[1], pos3);\n        else {\n            const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n            if (matrix) return $1b02bf129d2c9258$var$getPosFromMatrix(matrix[1], pos2);\n            else return 0;\n        }\n    };\nconst $1b02bf129d2c9258$var$transformKeys = new Set([\n    \"x\",\n    \"y\",\n    \"z\"\n]);\nconst $1b02bf129d2c9258$var$nonTranslationalTransformKeys = (0, $5912f55e0acfeb49$export$280dc01950909d86).filter((key)=>!$1b02bf129d2c9258$var$transformKeys.has(key));\nfunction $1b02bf129d2c9258$export$39d4bc9655f3f632(visualElement) {\n    const removedTransforms = [];\n    $1b02bf129d2c9258$var$nonTranslationalTransformKeys.forEach((key)=>{\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([\n                key,\n                value.get()\n            ]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst $1b02bf129d2c9258$export$781d46a8aa670d52 = {\n    // Dimensions\n    width: ({ x: x }, { paddingLeft: paddingLeft = \"0\", paddingRight: paddingRight = \"0\" })=>x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y: y }, { paddingTop: paddingTop = \"0\", paddingBottom: paddingBottom = \"0\" })=>y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top: top })=>parseFloat(top),\n    left: (_bbox, { left: left })=>parseFloat(left),\n    bottom: ({ y: y }, { top: top })=>parseFloat(top) + (y.max - y.min),\n    right: ({ x: x }, { left: left })=>parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: $1b02bf129d2c9258$var$getTranslateFromMatrix(4, 13),\n    y: $1b02bf129d2c9258$var$getTranslateFromMatrix(5, 14)\n};\n// Alias translate longform names\n$1b02bf129d2c9258$export$781d46a8aa670d52.translateX = $1b02bf129d2c9258$export$781d46a8aa670d52.x;\n$1b02bf129d2c9258$export$781d46a8aa670d52.translateY = $1b02bf129d2c9258$export$781d46a8aa670d52.y;\n\n\n\nconst $bccc1e36ab507cbc$var$toResolve = new Set();\nlet $bccc1e36ab507cbc$var$isScheduled = false;\nlet $bccc1e36ab507cbc$var$anyNeedsMeasurement = false;\nfunction $bccc1e36ab507cbc$var$measureAllKeyframes() {\n    if ($bccc1e36ab507cbc$var$anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from($bccc1e36ab507cbc$var$toResolve).filter((resolver)=>resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver)=>resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */ elementsToMeasure.forEach((element)=>{\n            const removedTransforms = (0, $1b02bf129d2c9258$export$39d4bc9655f3f632)(element);\n            if (!removedTransforms.length) return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver)=>resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element)=>{\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) restore.forEach(([key, value])=>{\n                var _a;\n                (_a = element.getValue(key)) === null || _a === void 0 || _a.set(value);\n            });\n        });\n        // Read\n        resolversToMeasure.forEach((resolver)=>resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver)=>{\n            if (resolver.suspendedScrollY !== undefined) window.scrollTo(0, resolver.suspendedScrollY);\n        });\n    }\n    $bccc1e36ab507cbc$var$anyNeedsMeasurement = false;\n    $bccc1e36ab507cbc$var$isScheduled = false;\n    $bccc1e36ab507cbc$var$toResolve.forEach((resolver)=>resolver.complete());\n    $bccc1e36ab507cbc$var$toResolve.clear();\n}\nfunction $bccc1e36ab507cbc$var$readAllKeyframes() {\n    $bccc1e36ab507cbc$var$toResolve.forEach((resolver)=>{\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) $bccc1e36ab507cbc$var$anyNeedsMeasurement = true;\n    });\n}\nfunction $bccc1e36ab507cbc$export$78b96d2a12593b05() {\n    $bccc1e36ab507cbc$var$readAllKeyframes();\n    $bccc1e36ab507cbc$var$measureAllKeyframes();\n}\nclass $bccc1e36ab507cbc$export$74d34ca3182f1750 {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false){\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */ this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */ this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */ this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */ this.isScheduled = false;\n        this.unresolvedKeyframes = [\n            ...unresolvedKeyframes\n        ];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            $bccc1e36ab507cbc$var$toResolve.add(this);\n            if (!$bccc1e36ab507cbc$var$isScheduled) {\n                $bccc1e36ab507cbc$var$isScheduled = true;\n                (0, $cd672ddb30793005$export$2cef06c20297c17d).read($bccc1e36ab507cbc$var$readAllKeyframes);\n                (0, $cd672ddb30793005$export$2cef06c20297c17d).resolveKeyframes($bccc1e36ab507cbc$var$measureAllKeyframes);\n            }\n        } else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes: unresolvedKeyframes, name: name, element: element, motionValue: motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */ for(let i = 0; i < unresolvedKeyframes.length; i++)if (unresolvedKeyframes[i] === null) {\n            /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */ if (i === 0) {\n                const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                if (currentValue !== undefined) unresolvedKeyframes[0] = currentValue;\n                else if (element && name) {\n                    const valueAsRead = element.readValue(name, finalKeyframe);\n                    if (valueAsRead !== undefined && valueAsRead !== null) unresolvedKeyframes[0] = valueAsRead;\n                }\n                if (unresolvedKeyframes[0] === undefined) unresolvedKeyframes[0] = finalKeyframe;\n                if (motionValue && currentValue === undefined) motionValue.set(unresolvedKeyframes[0]);\n            } else unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n        }\n    }\n    setFinalKeyframe() {}\n    measureInitialState() {}\n    renderEndStyles() {}\n    measureEndState() {}\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        $bccc1e36ab507cbc$var$toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            $bccc1e36ab507cbc$var$toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete) this.scheduleResolve();\n    }\n}\n\n\n\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */ const $623f6df036e36c5b$export$65583ed5a868f2d9 = (v)=>/^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\n\nconst $95f591b32a5022cf$var$checkStringStartsWith = (token)=>(key)=>typeof key === \"string\" && key.startsWith(token);\nconst $95f591b32a5022cf$export$9de1236619d9e756 = /*@__PURE__*/ $95f591b32a5022cf$var$checkStringStartsWith(\"--\");\nconst $95f591b32a5022cf$var$startsAsVariableToken = /*@__PURE__*/ $95f591b32a5022cf$var$checkStringStartsWith(\"var(--\");\nconst $95f591b32a5022cf$export$31f9caa2600b5723 = (value)=>{\n    const startsWithToken = $95f591b32a5022cf$var$startsAsVariableToken(value);\n    if (!startsWithToken) return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return $95f591b32a5022cf$var$singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst $95f591b32a5022cf$var$singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */ const $506a2846d20244c7$var$splitCSSVariableRegex = // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction $506a2846d20244c7$export$b9f0c1f373aee2b0(current) {\n    const match = $506a2846d20244c7$var$splitCSSVariableRegex.exec(current);\n    if (!match) return [\n        , \n    ];\n    const [, token1, token2, fallback] = match;\n    return [\n        `--${token1 !== null && token1 !== void 0 ? token1 : token2}`,\n        fallback\n    ];\n}\nconst $506a2846d20244c7$var$maxDepth = 4;\nfunction $506a2846d20244c7$export$289398774300c991(current, element, depth = 1) {\n    (0, $66afa3c9bf43e7f2$export$f5708dca728d7177)(depth <= $506a2846d20244c7$var$maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = $506a2846d20244c7$export$b9f0c1f373aee2b0(current);\n    // No CSS variable detected\n    if (!token) return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return (0, $623f6df036e36c5b$export$65583ed5a868f2d9)(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return (0, $95f591b32a5022cf$export$31f9caa2600b5723)(fallback) ? $506a2846d20244c7$export$289398774300c991(fallback, element, depth + 1) : fallback;\n}\n\n\n\n\n\n\n/**\n * Tests a provided value against a ValueType\n */ const $36fe2c49c6b04adc$export$6eae4d0a6a7ca7cd = (v)=>(type)=>type.test(v);\n\n\n/**\n * ValueType for \"auto\"\n */ const $493eb7ba323cdadc$export$dfb5619354ba860 = {\n    test: (v)=>v === \"auto\",\n    parse: (v)=>v\n};\n\n\n/**\n * A list of value types commonly used for dimensions\n */ const $2ac2d6c55277c5a1$export$d176691c1998a1f5 = [\n    (0, $f0b1c3723c46295c$export$98e628dec113755e),\n    (0, $a3e3e887e365f48f$export$91c0eda1d06bf008),\n    (0, $a3e3e887e365f48f$export$626336c2cd4b14de),\n    (0, $a3e3e887e365f48f$export$41fc368e1a942b97),\n    (0, $a3e3e887e365f48f$export$aed3d7b7d206c196),\n    (0, $a3e3e887e365f48f$export$f91e8c45a95a32f2),\n    (0, $493eb7ba323cdadc$export$dfb5619354ba860)\n];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */ const $2ac2d6c55277c5a1$export$eefdd52e3ccae428 = (v)=>$2ac2d6c55277c5a1$export$d176691c1998a1f5.find((0, $36fe2c49c6b04adc$export$6eae4d0a6a7ca7cd)(v));\n\n\nclass $92e0d99d6ef546e1$export$4983792d11b61017 extends (0, $bccc1e36ab507cbc$export$74d34ca3182f1750) {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element){\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes: unresolvedKeyframes, element: element, name: name } = this;\n        if (!element || !element.current) return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */ for(let i = 0; i < unresolvedKeyframes.length; i++){\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if ((0, $95f591b32a5022cf$export$31f9caa2600b5723)(keyframe)) {\n                    const resolved = (0, $506a2846d20244c7$export$289398774300c991)(keyframe, element.current);\n                    if (resolved !== undefined) unresolvedKeyframes[i] = resolved;\n                    if (i === unresolvedKeyframes.length - 1) this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */ this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */ if (!(0, $9cde0c46eca3fa0c$export$c66c0d5db2a205d).has(name) || unresolvedKeyframes.length !== 2) return;\n        const [origin, target] = unresolvedKeyframes;\n        const originType = (0, $2ac2d6c55277c5a1$export$eefdd52e3ccae428)(origin);\n        const targetType = (0, $2ac2d6c55277c5a1$export$eefdd52e3ccae428)(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */ if (originType === targetType) return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */ if ((0, $1b02bf129d2c9258$export$8e5250d1aa9bf370)(originType) && (0, $1b02bf129d2c9258$export$8e5250d1aa9bf370)(targetType)) for(let i = 0; i < unresolvedKeyframes.length; i++){\n            const value = unresolvedKeyframes[i];\n            if (typeof value === \"string\") unresolvedKeyframes[i] = parseFloat(value);\n        }\n        else /**\n             * Else, the only way to resolve this is by measuring the element.\n             */ this.needsMeasurement = true;\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes: unresolvedKeyframes, name: name } = this;\n        const noneKeyframeIndexes = [];\n        for(let i = 0; i < unresolvedKeyframes.length; i++)if ((0, $2dae10ab3851d73f$export$e56af863d5645d5f)(unresolvedKeyframes[i])) noneKeyframeIndexes.push(i);\n        if (noneKeyframeIndexes.length) (0, $2dce6f8f0459cf3b$export$8cc4958f8e540f37)(unresolvedKeyframes, noneKeyframeIndexes, name);\n    }\n    measureInitialState() {\n        const { element: element, unresolvedKeyframes: unresolvedKeyframes, name: name } = this;\n        if (!element || !element.current) return;\n        if (name === \"height\") this.suspendedScrollY = window.pageYOffset;\n        this.measuredOrigin = (0, $1b02bf129d2c9258$export$781d46a8aa670d52)[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n    }\n    measureEndState() {\n        var _a;\n        const { element: element, name: name, unresolvedKeyframes: unresolvedKeyframes } = this;\n        if (!element || !element.current) return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = (0, $1b02bf129d2c9258$export$781d46a8aa670d52)[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) this.finalKeyframe = finalKeyframe;\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue])=>{\n            element.getValue(unsetTransformName).set(unsetTransformValue);\n        });\n        this.resolveNoneKeyframes();\n    }\n}\n\n\n\n\n\n\n\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */ const $3e66266273418bc5$export$65676b58b122bc38 = (value, name)=>{\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\") return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value)) return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n    ((0, $a3f9111a4eded79d$export$83a0e34f1302825b).test(value) || value === \"0\") && // And it contains numbers and/or colors\n    !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) return true;\n    return false;\n};\n\n\nfunction $9bbba9dfc3c53348$var$hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1) return true;\n    for(let i = 0; i < keyframes.length; i++){\n        if (keyframes[i] !== current) return true;\n    }\n}\nfunction $9bbba9dfc3c53348$export$1b109e6c9968df4f(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */ const originKeyframe = keyframes[0];\n    if (originKeyframe === null) return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */ if (name === \"display\" || name === \"visibility\") return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = (0, $3e66266273418bc5$export$65676b58b122bc38)(originKeyframe, name);\n    const isTargetAnimatable = (0, $3e66266273418bc5$export$65676b58b122bc38)(targetKeyframe, name);\n    (0, $66afa3c9bf43e7f2$export$491112666e282270)(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) return false;\n    return $9bbba9dfc3c53348$var$hasKeyframesChanged(keyframes) || (type === \"spring\" || (0, $fd8d2a9f7ab45528$export$6ab7812f1bac68be)(type)) && velocity;\n}\n\n\nconst $2f3921bc0365cec1$var$isNotNull = (value)=>value !== null;\nfunction $2f3921bc0365cec1$export$14de59408fad90b(keyframes, { repeat: repeat, repeatType: repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter($2f3921bc0365cec1$var$isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1 ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined ? resolvedKeyframes[index] : finalKeyframe;\n}\n\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */ const $dacde052213c028d$var$MAX_RESOLVE_DELAY = 40;\nclass $dacde052213c028d$export$d1e4f34b9c2550c1 {\n    constructor({ autoplay: autoplay = true, delay: delay = 0, type: type = \"keyframes\", repeat: repeat = 0, repeatDelay: repeatDelay = 0, repeatType: repeatType = \"loop\", ...options }){\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = (0, $98a6a7cf3d400a23$export$2da9be4cfdb689b1).now();\n        this.options = {\n            autoplay: autoplay,\n            delay: delay,\n            type: type,\n            repeat: repeat,\n            repeatDelay: repeatDelay,\n            repeatType: repeatType,\n            ...options\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */ calcStartTime() {\n        if (!this.resolvedAt) return this.createdAt;\n        return this.resolvedAt - this.createdAt > $dacde052213c028d$var$MAX_RESOLVE_DELAY ? this.resolvedAt : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */ get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) (0, $bccc1e36ab507cbc$export$78b96d2a12593b05)();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */ onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = (0, $98a6a7cf3d400a23$export$2da9be4cfdb689b1).now();\n        this.hasAttemptedResolve = true;\n        const { name: name, type: type, velocity: velocity, delay: delay, onComplete: onComplete, onUpdate: onUpdate, isGenerator: isGenerator } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */ if (!isGenerator && !(0, $9bbba9dfc3c53348$export$1b109e6c9968df4f)(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if ((0, $5285b300c864cfef$export$888a3d84909f9e3d).current || !delay) {\n                onUpdate && onUpdate((0, $2f3921bc0365cec1$export$14de59408fad90b)(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            } else this.options.duration = 0;\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false) return;\n        this._resolved = {\n            keyframes: keyframes,\n            finalKeyframe: finalKeyframe,\n            ...resolvedAnimation\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() {}\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */ then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve)=>{\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n// Adapted from https://gist.github.com/mjackson/5311256\nfunction $e82a5eb92c4ea669$var$hueToRgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 0.5) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction $e82a5eb92c4ea669$export$6ae64dbcd6bfc33e({ hue: hue, saturation: saturation, lightness: lightness, alpha: alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) red = green = blue = lightness;\n    else {\n        const q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = $e82a5eb92c4ea669$var$hueToRgb(p, q, hue + 1 / 3);\n        green = $e82a5eb92c4ea669$var$hueToRgb(p, q, hue);\n        blue = $e82a5eb92c4ea669$var$hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha: alpha\n    };\n}\n\n\n\n\n\nfunction $32033b81d1f1b601$export$a6f92d4bae65c0f1(a, b) {\n    return (p)=>p > 0 ? b : a;\n}\n\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst $5d2be84d41d51843$export$d4ecea248cce73c = (from, to, v)=>{\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst $5d2be84d41d51843$var$colorTypes = [\n    (0, $d57a99a0e704c16e$export$834dfc94dde4b3d8),\n    (0, $b43d7766c2461577$export$4e46ac54fc82cf3b),\n    (0, $12e46b2a1af36269$export$810b04175080204c)\n];\nconst $5d2be84d41d51843$var$getColorType = (v)=>$5d2be84d41d51843$var$colorTypes.find((type)=>type.test(v));\nfunction $5d2be84d41d51843$var$asRGBA(color) {\n    const type = $5d2be84d41d51843$var$getColorType(color);\n    (0, $66afa3c9bf43e7f2$export$491112666e282270)(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type)) return false;\n    let model = type.parse(color);\n    if (type === (0, $12e46b2a1af36269$export$810b04175080204c)) // TODO Remove this cast - needed since Motion's stricter typing\n    model = (0, $e82a5eb92c4ea669$export$6ae64dbcd6bfc33e)(model);\n    return model;\n}\nconst $5d2be84d41d51843$export$51e568cf5c039bac = (from, to)=>{\n    const fromRGBA = $5d2be84d41d51843$var$asRGBA(from);\n    const toRGBA = $5d2be84d41d51843$var$asRGBA(to);\n    if (!fromRGBA || !toRGBA) return (0, $32033b81d1f1b601$export$a6f92d4bae65c0f1)(from, to);\n    const blended = {\n        ...fromRGBA\n    };\n    return (v)=>{\n        blended.red = $5d2be84d41d51843$export$d4ecea248cce73c(fromRGBA.red, toRGBA.red, v);\n        blended.green = $5d2be84d41d51843$export$d4ecea248cce73c(fromRGBA.green, toRGBA.green, v);\n        blended.blue = $5d2be84d41d51843$export$d4ecea248cce73c(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = (0, $a9e22a3f98efa112$export$3bb0b4ff1037b8dd)(fromRGBA.alpha, toRGBA.alpha, v);\n        return (0, $b43d7766c2461577$export$4e46ac54fc82cf3b).transform(blended);\n    };\n};\n\n\n/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */ const $d9b34e18ce0192f7$var$combineFunctions = (a, b)=>(v)=>b(a(v));\nconst $d9b34e18ce0192f7$export$a4627e546088548d = (...transformers)=>transformers.reduce($d9b34e18ce0192f7$var$combineFunctions);\n\n\n\n\n\n\nconst $ac9900966557002c$export$e5a55ae567dd4ac7 = new Set([\n    \"none\",\n    \"hidden\"\n]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */ function $ac9900966557002c$export$fed62ccc3fb1a568(origin, target) {\n    if ($ac9900966557002c$export$e5a55ae567dd4ac7.has(origin)) return (p)=>p <= 0 ? origin : target;\n    else return (p)=>p >= 1 ? target : origin;\n}\n\n\n\nfunction $0893cfa0acaa2184$var$mixNumber(a, b) {\n    return (p)=>(0, $a9e22a3f98efa112$export$3bb0b4ff1037b8dd)(a, b, p);\n}\nfunction $0893cfa0acaa2184$export$36ec24672cd098e0(a) {\n    if (typeof a === \"number\") return $0893cfa0acaa2184$var$mixNumber;\n    else if (typeof a === \"string\") return (0, $95f591b32a5022cf$export$31f9caa2600b5723)(a) ? (0, $32033b81d1f1b601$export$a6f92d4bae65c0f1) : (0, $49036ae22fb7dd0b$export$35e9368ef982300f).test(a) ? (0, $5d2be84d41d51843$export$51e568cf5c039bac) : $0893cfa0acaa2184$export$65516310a87d8205;\n    else if (Array.isArray(a)) return $0893cfa0acaa2184$export$3bbefa2f402845c4;\n    else if (typeof a === \"object\") return (0, $49036ae22fb7dd0b$export$35e9368ef982300f).test(a) ? (0, $5d2be84d41d51843$export$51e568cf5c039bac) : $0893cfa0acaa2184$export$ebc23b6840c51ba1;\n    return 0, $32033b81d1f1b601$export$a6f92d4bae65c0f1;\n}\nfunction $0893cfa0acaa2184$export$3bbefa2f402845c4(a, b) {\n    const output = [\n        ...a\n    ];\n    const numValues = output.length;\n    const blendValue = a.map((v, i)=>$0893cfa0acaa2184$export$36ec24672cd098e0(v)(v, b[i]));\n    return (p)=>{\n        for(let i = 0; i < numValues; i++)output[i] = blendValue[i](p);\n        return output;\n    };\n}\nfunction $0893cfa0acaa2184$export$ebc23b6840c51ba1(a, b) {\n    const output = {\n        ...a,\n        ...b\n    };\n    const blendValue = {};\n    for(const key in output)if (a[key] !== undefined && b[key] !== undefined) blendValue[key] = $0893cfa0acaa2184$export$36ec24672cd098e0(a[key])(a[key], b[key]);\n    return (v)=>{\n        for(const key in blendValue)output[key] = blendValue[key](v);\n        return output;\n    };\n}\nfunction $0893cfa0acaa2184$var$matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = {\n        color: 0,\n        var: 0,\n        number: 0\n    };\n    for(let i = 0; i < target.values.length; i++){\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst $0893cfa0acaa2184$export$65516310a87d8205 = (origin, target)=>{\n    const template = (0, $a3f9111a4eded79d$export$83a0e34f1302825b).createTransformer(target);\n    const originStats = (0, $a3f9111a4eded79d$export$b61fc7c44bf646d5)(origin);\n    const targetStats = (0, $a3f9111a4eded79d$export$b61fc7c44bf646d5)(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length && originStats.indexes.color.length === targetStats.indexes.color.length && originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((0, $ac9900966557002c$export$e5a55ae567dd4ac7).has(origin) && !targetStats.values.length || (0, $ac9900966557002c$export$e5a55ae567dd4ac7).has(target) && !originStats.values.length) return (0, $ac9900966557002c$export$fed62ccc3fb1a568)(origin, target);\n        return (0, $d9b34e18ce0192f7$export$a4627e546088548d)($0893cfa0acaa2184$export$3bbefa2f402845c4($0893cfa0acaa2184$var$matchOrder(originStats, targetStats), targetStats.values), template);\n    } else {\n        (0, $66afa3c9bf43e7f2$export$491112666e282270)(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (0, $32033b81d1f1b601$export$a6f92d4bae65c0f1)(origin, target);\n    }\n};\n\n\n\nfunction $eb3ccdac2f8ee8b8$export$2c9e8a9632a706b2(from, to, p) {\n    if (typeof from === \"number\" && typeof to === \"number\" && typeof p === \"number\") return (0, $a9e22a3f98efa112$export$3bb0b4ff1037b8dd)(from, to, p);\n    const mixer = (0, $0893cfa0acaa2184$export$36ec24672cd098e0)(from);\n    return mixer(from, to);\n}\n\n\n\n\n\nfunction $c74e3cf875cd2863$export$ee3ff3a17106998({ keyframes: keyframes, velocity: velocity = 0.0, power: power = 0.8, timeConstant: timeConstant = 325, bounceDamping: bounceDamping = 10, bounceStiffness: bounceStiffness = 500, modifyTarget: modifyTarget, min: min, max: max, restDelta: restDelta = 0.5, restSpeed: restSpeed }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin\n    };\n    const isOutOfBounds = (v)=>min !== undefined && v < min || max !== undefined && v > max;\n    const nearestBoundary = (v)=>{\n        if (min === undefined) return max;\n        if (max === undefined) return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */ if (target !== ideal) amplitude = target - origin;\n    const calcDelta = (t)=>-amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t)=>target + calcDelta(t);\n    const applyFriction = (t)=>{\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */ let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t)=>{\n        if (!isOutOfBounds(state.value)) return;\n        timeReachedBoundary = t;\n        spring$1 = (0, $5b7d0ac4aa5a14e2$export$b36281d89752ae66)({\n            keyframes: [\n                state.value,\n                nearestBoundary(state.value)\n            ],\n            velocity: (0, $26e171f99dec0da1$export$854187271d233eb5)(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta: restDelta,\n            restSpeed: restSpeed\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t)=>{\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */ let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */ if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) return spring$1.next(t - timeReachedBoundary);\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        }\n    };\n}\n\n\n\nconst $02287815365d4c56$export$929e5a82286172a6 = /*@__PURE__*/ (0, $c2c66fca466c46bf$export$2c575fa1d20488bd)(0.42, 0, 1, 1);\nconst $02287815365d4c56$export$57636bb43b1ccbb0 = /*@__PURE__*/ (0, $c2c66fca466c46bf$export$2c575fa1d20488bd)(0, 0, 0.58, 1);\nconst $02287815365d4c56$export$c07234257a03d5e9 = /*@__PURE__*/ (0, $c2c66fca466c46bf$export$2c575fa1d20488bd)(0.42, 0, 0.58, 1);\n\n\n\n\n\n\n\n\n\n\n\nconst $2e6968a9c5c449be$var$easingLookup = {\n    linear: (0, $784484be748b616c$export$8793edee2d425525),\n    easeIn: $02287815365d4c56$export$929e5a82286172a6,\n    easeInOut: $02287815365d4c56$export$c07234257a03d5e9,\n    easeOut: $02287815365d4c56$export$57636bb43b1ccbb0,\n    circIn: $c8a3318a0eecf080$export$e444123e42d03385,\n    circInOut: $c8a3318a0eecf080$export$30d3455eee55bed5,\n    circOut: $c8a3318a0eecf080$export$c8d67a19199d1a50,\n    backIn: $10f899f83036f369$export$b01116c84cdfe1a2,\n    backInOut: $10f899f83036f369$export$ddc5fd596f6c71b2,\n    backOut: $10f899f83036f369$export$77edfce482316a60,\n    anticipate: $f07eca3a74529833$export$6b0af63b873d419e\n};\nconst $2e6968a9c5c449be$export$ef97fe084f156ca4 = (definition)=>{\n    if ((0, $f67571d677c611ce$export$ff43f99925d7366b)(definition)) {\n        // If cubic bezier definition, create bezier curve\n        (0, $66afa3c9bf43e7f2$export$f5708dca728d7177)(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return (0, $c2c66fca466c46bf$export$2c575fa1d20488bd)(x1, y1, x2, y2);\n    } else if (typeof definition === \"string\") {\n        // Else lookup from table\n        (0, $66afa3c9bf43e7f2$export$f5708dca728d7177)($2e6968a9c5c449be$var$easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return $2e6968a9c5c449be$var$easingLookup[definition];\n    }\n    return definition;\n};\n\n\n\n\n\n\n\n\nfunction $2462c4e6531aa81f$var$createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || (0, $eb3ccdac2f8ee8b8$export$2c9e8a9632a706b2);\n    const numMixers = output.length - 1;\n    for(let i = 0; i < numMixers; i++){\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || (0, $784484be748b616c$export$8793edee2d425525) : ease;\n            mixer = (0, $d9b34e18ce0192f7$export$a4627e546088548d)(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */ function $2462c4e6531aa81f$export$89e29e4ab65e70a9(input, output, { clamp: isClamp = true, ease: ease, mixer: mixer } = {}) {\n    const inputLength = input.length;\n    (0, $66afa3c9bf43e7f2$export$f5708dca728d7177)(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */ if (inputLength === 1) return ()=>output[0];\n    if (inputLength === 2 && output[0] === output[1]) return ()=>output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [\n            ...input\n        ].reverse();\n        output = [\n            ...output\n        ].reverse();\n    }\n    const mixers = $2462c4e6531aa81f$var$createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v)=>{\n        if (isZeroDeltaRange && v < input[0]) return output[0];\n        let i = 0;\n        if (numMixers > 1) for(; i < input.length - 2; i++){\n            if (v < input[i + 1]) break;\n        }\n        const progressInRange = (0, $ef49c9e1b212a303$export$504d7abb21fa8c9)(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp ? (v)=>interpolator((0, $61505dd9bdaf733e$export$7d15b64cf5a3a4c4)(input[0], input[inputLength - 1], v)) : interpolator;\n}\n\n\n\nfunction $a07aa87c21cbf268$export$2a91b4e3a4539316(offset, duration) {\n    return offset.map((o)=>o * duration);\n}\n\n\nfunction $a8ded32507bfba63$export$6b60b58e4ea7d715(values, easing) {\n    return values.map(()=>easing || (0, $02287815365d4c56$export$c07234257a03d5e9)).splice(0, values.length - 1);\n}\nfunction $a8ded32507bfba63$export$d25ddfdf17c3ad3e({ duration: duration = 300, keyframes: keyframeValues, times: times, ease: ease = \"easeInOut\" }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */ const easingFunctions = (0, $c781891811e4db53$export$216948827bbdc797)(ease) ? ease.map((0, $2e6968a9c5c449be$export$ef97fe084f156ca4)) : (0, $2e6968a9c5c449be$export$ef97fe084f156ca4)(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */ const state = {\n        done: false,\n        value: keyframeValues[0]\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */ const absoluteTimes = (0, $a07aa87c21cbf268$export$2a91b4e3a4539316)(// Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length ? times : (0, $9834b5ef2cf2f4ed$export$24dbcec0b26e6d9d)(keyframeValues), duration);\n    const mapTimeToKeyframe = (0, $2462c4e6531aa81f$export$89e29e4ab65e70a9)(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions) ? easingFunctions : $a8ded32507bfba63$export$6b60b58e4ea7d715(keyframeValues, easingFunctions)\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t)=>{\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        }\n    };\n}\n\n\n\n\n\n\nconst $a1682e837d496d06$export$c1033964b5ad7fef = (update)=>{\n    const passTimestamp = ({ timestamp: timestamp })=>update(timestamp);\n    return {\n        start: ()=>(0, $cd672ddb30793005$export$2cef06c20297c17d).update(passTimestamp, true),\n        stop: ()=>(0, $cd672ddb30793005$export$ec99c0ef4978dccb)(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */ now: ()=>(0, $cd672ddb30793005$export$fff89137e9e818ce).isProcessing ? (0, $cd672ddb30793005$export$fff89137e9e818ce).timestamp : (0, $98a6a7cf3d400a23$export$2da9be4cfdb689b1).now()\n    };\n};\n\n\n\nconst $cf6c65dcc91ac255$var$generators = {\n    decay: (0, $c74e3cf875cd2863$export$ee3ff3a17106998),\n    inertia: $c74e3cf875cd2863$export$ee3ff3a17106998,\n    tween: (0, $a8ded32507bfba63$export$d25ddfdf17c3ad3e),\n    keyframes: (0, $a8ded32507bfba63$export$d25ddfdf17c3ad3e),\n    spring: $5b7d0ac4aa5a14e2$export$b36281d89752ae66\n};\nconst $cf6c65dcc91ac255$var$percentToProgress = (percent)=>percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */ class $cf6c65dcc91ac255$export$fd98d9cca67a58bc extends (0, $dacde052213c028d$export$d1e4f34b9c2550c1) {\n    constructor(options){\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */ this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */ this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */ this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */ this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */ this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */ this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */ this.stop = ()=>{\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\") return;\n            this.teardown();\n            const { onStop: onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name: name, motionValue: motionValue, element: element, keyframes: keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || (0, $bccc1e36ab507cbc$export$74d34ca3182f1750);\n        const onResolved = (resolvedKeyframes, finalKeyframe)=>this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n    }\n    initPlayback(keyframes$1) {\n        const { type: type = \"keyframes\", repeat: repeat = 0, repeatDelay: repeatDelay = 0, repeatType: repeatType, velocity: velocity = 0 } = this.options;\n        const generatorFactory = (0, $fd8d2a9f7ab45528$export$6ab7812f1bac68be)(type) ? type : $cf6c65dcc91ac255$var$generators[type] || (0, $a8ded32507bfba63$export$d25ddfdf17c3ad3e);\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */ let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== (0, $a8ded32507bfba63$export$d25ddfdf17c3ad3e) && typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = (0, $d9b34e18ce0192f7$export$a4627e546088548d)($cf6c65dcc91ac255$var$percentToProgress, (0, $eb3ccdac2f8ee8b8$export$2c9e8a9632a706b2)(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [\n                0,\n                100\n            ];\n        }\n        const generator = generatorFactory({\n            ...this.options,\n            keyframes: keyframes$1\n        });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */ if (repeatType === \"mirror\") mirroredGenerator = generatorFactory({\n            ...this.options,\n            keyframes: [\n                ...keyframes$1\n            ].reverse(),\n            velocity: -velocity\n        });\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */ if (generator.calculatedDuration === null) generator.calculatedDuration = (0, $58d9506861683f86$export$cbdd6b3d40ea54e2)(generator);\n        const { calculatedDuration: calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator: generator,\n            mirroredGenerator: mirroredGenerator,\n            mapPercentToKeyframes: mapPercentToKeyframes,\n            calculatedDuration: calculatedDuration,\n            resolvedDuration: resolvedDuration,\n            totalDuration: totalDuration\n        };\n    }\n    onPostResolved() {\n        const { autoplay: autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) this.pause();\n        else this.state = this.pendingPlayState;\n    }\n    tick(timestamp, sample = false) {\n        const { resolved: resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes: keyframes } = this.options;\n            return {\n                done: true,\n                value: keyframes[keyframes.length - 1]\n            };\n        }\n        const { finalKeyframe: finalKeyframe, generator: generator, mirroredGenerator: mirroredGenerator, mapPercentToKeyframes: mapPercentToKeyframes, keyframes: keyframes, calculatedDuration: calculatedDuration, totalDuration: totalDuration, resolvedDuration: resolvedDuration } = resolved;\n        if (this.startTime === null) return generator.next(0);\n        const { delay: delay, repeat: repeat, repeatType: repeatType, repeatDelay: repeatDelay, onUpdate: onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */ if (this.speed > 0) this.startTime = Math.min(this.startTime, timestamp);\n        else if (this.speed < 0) this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        // Update currentTime\n        if (sample) this.currentTime = timestamp;\n        else if (this.holdTime !== null) this.currentTime = this.holdTime;\n        else // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n        // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n        // example.\n        this.currentTime = Math.round(timestamp - this.startTime) * this.speed;\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) this.currentTime = totalDuration;\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */ const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */ let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */ let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */ if (!iterationProgress && progress >= 1) iterationProgress = 1;\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */ const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) iterationProgress -= repeatDelay / resolvedDuration;\n                } else if (repeatType === \"mirror\") frameGenerator = mirroredGenerator;\n            }\n            elapsed = (0, $61505dd9bdaf733e$export$7d15b64cf5a3a4c4)(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */ const state = isInDelayPhase ? {\n            done: false,\n            value: keyframes[0]\n        } : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) state.value = mapPercentToKeyframes(state.value);\n        let { done: done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) done = this.speed >= 0 ? this.currentTime >= totalDuration : this.currentTime <= 0;\n        const isAnimationFinished = this.holdTime === null && (this.state === \"finished\" || this.state === \"running\" && done);\n        if (isAnimationFinished && finalKeyframe !== undefined) state.value = (0, $2f3921bc0365cec1$export$14de59408fad90b)(keyframes, this.options, finalKeyframe);\n        if (onUpdate) onUpdate(state.value);\n        if (isAnimationFinished) this.finish();\n        return state;\n    }\n    get duration() {\n        const { resolved: resolved } = this;\n        return resolved ? (0, $72f03d5c7302cbd5$export$f64c3bfbc58eec0f)(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return (0, $72f03d5c7302cbd5$export$f64c3bfbc58eec0f)(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = (0, $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7)(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) this.holdTime = newTime;\n        else if (this.driver) this.startTime = this.driver.now() - newTime / this.speed;\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) this.time = (0, $72f03d5c7302cbd5$export$f64c3bfbc58eec0f)(this.currentTime);\n    }\n    play() {\n        if (!this.resolver.isScheduled) this.resolver.resume();\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped) return;\n        const { driver: driver = (0, $a1682e837d496d06$export$c1033964b5ad7fef), onPlay: onPlay, startTime: startTime } = this.options;\n        if (!this.driver) this.driver = driver((timestamp)=>this.tick(timestamp));\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) this.startTime = now - this.holdTime;\n        else if (!this.startTime) this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        else if (this.state === \"finished\") this.startTime = now;\n        if (this.state === \"finished\") this.updateFinishedPromise();\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */ this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") this.play();\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete: onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) this.tick(this.cancelTime);\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver) return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction $cf6c65dcc91ac255$export$ee9b76de7353d815(options) {\n    return new $cf6c65dcc91ac255$export$fd98d9cca67a58bc(options);\n}\n\n\n/**\n * A list of values that can be hardware-accelerated.\n */ const $efb2568a963b5e49$export$a27eefbd8fb5e404 = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\"\n]);\n\n\n\n\nfunction $e4495eac3edfd7a9$export$d896de52f97cb615(element, valueName, keyframes, { delay: delay = 0, duration: duration = 300, repeat: repeat = 0, repeatType: repeatType = \"loop\", ease: ease = \"easeInOut\", times: times } = {}) {\n    const keyframeOptions = {\n        [valueName]: keyframes\n    };\n    if (times) keyframeOptions.offset = times;\n    const easing = (0, $47be5444287118bb$export$916ea73bcd3a6030)(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */ if (Array.isArray(easing)) keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay: delay,\n        duration: duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\"\n    });\n}\n\n\n\n\n\nconst $672d2af02c7550a3$export$51ea9b46fb7a8c5d = /*@__PURE__*/ (0, $b0dedcc96679f76e$export$7c73462e0d25e514)(()=>Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */ const $a9356a9e5ef48c16$var$sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */ const $a9356a9e5ef48c16$var$maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */ function $a9356a9e5ef48c16$var$requiresPregeneratedKeyframes(options) {\n    return (0, $fd8d2a9f7ab45528$export$6ab7812f1bac68be)(options.type) || options.type === \"spring\" || !(0, $47be5444287118bb$export$fcdd8f3f2160beda)(options.ease);\n}\nfunction $a9356a9e5ef48c16$var$pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */ const sampleAnimation = new (0, $cf6c65dcc91ac255$export$fd98d9cca67a58bc)({\n        ...options,\n        keyframes: keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true\n    });\n    let state = {\n        done: false,\n        value: keyframes[0]\n    };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */ let t = 0;\n    while(!state.done && t < $a9356a9e5ef48c16$var$maxDuration){\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += $a9356a9e5ef48c16$var$sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - $a9356a9e5ef48c16$var$sampleDelta,\n        ease: \"linear\"\n    };\n}\nconst $a9356a9e5ef48c16$var$unsupportedEasingFunctions = {\n    anticipate: $f07eca3a74529833$export$6b0af63b873d419e,\n    backInOut: $10f899f83036f369$export$ddc5fd596f6c71b2,\n    circInOut: $c8a3318a0eecf080$export$30d3455eee55bed5\n};\nfunction $a9356a9e5ef48c16$var$isUnsupportedEase(key) {\n    return key in $a9356a9e5ef48c16$var$unsupportedEasingFunctions;\n}\nclass $a9356a9e5ef48c16$export$2a45abb4e6513325 extends (0, $dacde052213c028d$export$d1e4f34b9c2550c1) {\n    constructor(options){\n        super(options);\n        const { name: name, motionValue: motionValue, element: element, keyframes: keyframes } = this.options;\n        this.resolver = new (0, $92e0d99d6ef546e1$export$4983792d11b61017)(keyframes, (resolvedKeyframes, finalKeyframe)=>this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration: duration = 300, times: times, ease: ease, type: type, motionValue: motionValue, name: name, startTime: startTime } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */ if (!motionValue.owner || !motionValue.owner.current) return false;\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */ if (typeof ease === \"string\" && (0, $e6437dbefbc3c076$export$866c1d07a1ac2ab)() && $a9356a9e5ef48c16$var$isUnsupportedEase(ease)) ease = $a9356a9e5ef48c16$var$unsupportedEasingFunctions[ease];\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */ if ($a9356a9e5ef48c16$var$requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete: onComplete, onUpdate: onUpdate, motionValue: motionValue, element: element, ...options } = this.options;\n            const pregeneratedAnimation = $a9356a9e5ef48c16$var$pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) keyframes[1] = keyframes[0];\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = (0, $e4495eac3edfd7a9$export$d896de52f97cb615)(motionValue.owner.current, name, keyframes, {\n            ...this.options,\n            duration: duration,\n            times: times,\n            ease: ease\n        });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            (0, $c5545553b2eeb845$export$5bd0fcbc73622e13)(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        } else /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */ animation.onfinish = ()=>{\n            const { onComplete: onComplete } = this.options;\n            motionValue.set((0, $2f3921bc0365cec1$export$14de59408fad90b)(keyframes, this.options, finalKeyframe));\n            onComplete && onComplete();\n            this.cancel();\n            this.resolveFinishedPromise();\n        };\n        return {\n            animation: animation,\n            duration: duration,\n            times: times,\n            type: type,\n            ease: ease,\n            keyframes: keyframes\n        };\n    }\n    get duration() {\n        const { resolved: resolved } = this;\n        if (!resolved) return 0;\n        const { duration: duration } = resolved;\n        return (0, $72f03d5c7302cbd5$export$f64c3bfbc58eec0f)(duration);\n    }\n    get time() {\n        const { resolved: resolved } = this;\n        if (!resolved) return 0;\n        const { animation: animation } = resolved;\n        return (0, $72f03d5c7302cbd5$export$f64c3bfbc58eec0f)(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved: resolved } = this;\n        if (!resolved) return;\n        const { animation: animation } = resolved;\n        animation.currentTime = (0, $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7)(newTime);\n    }\n    get speed() {\n        const { resolved: resolved } = this;\n        if (!resolved) return 1;\n        const { animation: animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved: resolved } = this;\n        if (!resolved) return;\n        const { animation: animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved: resolved } = this;\n        if (!resolved) return \"idle\";\n        const { animation: animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved: resolved } = this;\n        if (!resolved) return null;\n        const { animation: animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */ attachTimeline(timeline) {\n        if (!this._resolved) this.pendingTimeline = timeline;\n        else {\n            const { resolved: resolved } = this;\n            if (!resolved) return 0, $784484be748b616c$export$8793edee2d425525;\n            const { animation: animation } = resolved;\n            (0, $c5545553b2eeb845$export$5bd0fcbc73622e13)(animation, timeline);\n        }\n        return 0, $784484be748b616c$export$8793edee2d425525;\n    }\n    play() {\n        if (this.isStopped) return;\n        const { resolved: resolved } = this;\n        if (!resolved) return;\n        const { animation: animation } = resolved;\n        if (animation.playState === \"finished\") this.updateFinishedPromise();\n        animation.play();\n    }\n    pause() {\n        const { resolved: resolved } = this;\n        if (!resolved) return;\n        const { animation: animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\") return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved: resolved } = this;\n        if (!resolved) return;\n        const { animation: animation, keyframes: keyframes, duration: duration, type: type, ease: ease, times: times } = resolved;\n        if (animation.playState === \"idle\" || animation.playState === \"finished\") return;\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */ if (this.time) {\n            const { motionValue: motionValue, onUpdate: onUpdate, onComplete: onComplete, element: element, ...options } = this.options;\n            const sampleAnimation = new (0, $cf6c65dcc91ac255$export$fd98d9cca67a58bc)({\n                ...options,\n                keyframes: keyframes,\n                duration: duration,\n                type: type,\n                ease: ease,\n                times: times,\n                isGenerator: true\n            });\n            const sampleTime = (0, $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7)(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - $a9356a9e5ef48c16$var$sampleDelta).value, sampleAnimation.sample(sampleTime).value, $a9356a9e5ef48c16$var$sampleDelta);\n        }\n        const { onStop: onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved: resolved } = this;\n        if (!resolved) return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved: resolved } = this;\n        if (!resolved) return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue: motionValue, name: name, repeatDelay: repeatDelay, repeatType: repeatType, damping: damping, type: type } = options;\n        if (!motionValue || !motionValue.owner || !(motionValue.owner.current instanceof HTMLElement)) return false;\n        const { onUpdate: onUpdate, transformTemplate: transformTemplate } = motionValue.owner.getProps();\n        return (0, $672d2af02c7550a3$export$51ea9b46fb7a8c5d)() && name && (0, $efb2568a963b5e49$export$a27eefbd8fb5e404).has(name) && /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */ !onUpdate && !transformTemplate && !repeatDelay && repeatType !== \"mirror\" && damping !== 0 && type !== \"inertia\";\n    }\n}\n\n\n\n\n\nconst $06af35a3e11efb50$var$underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10\n};\nconst $06af35a3e11efb50$var$criticallyDampedSpring = (target)=>({\n        type: \"spring\",\n        stiffness: 550,\n        damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n        restSpeed: 10\n    });\nconst $06af35a3e11efb50$var$keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */ const $06af35a3e11efb50$var$ease = {\n    type: \"keyframes\",\n    ease: [\n        0.25,\n        0.1,\n        0.35,\n        1\n    ],\n    duration: 0.3\n};\nconst $06af35a3e11efb50$export$262124b154b9f1c0 = (valueKey, { keyframes: keyframes })=>{\n    if (keyframes.length > 2) return $06af35a3e11efb50$var$keyframesTransition;\n    else if ((0, $5912f55e0acfeb49$export$7b42a0094fb00b6e).has(valueKey)) return valueKey.startsWith(\"scale\") ? $06af35a3e11efb50$var$criticallyDampedSpring(keyframes[1]) : $06af35a3e11efb50$var$underDampedSpring;\n    return $06af35a3e11efb50$var$ease;\n};\n\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */ function $a0e7568f7a593ab2$export$ca8e47dc8ed5a9d7({ when: when, delay: _delay, delayChildren: delayChildren, staggerChildren: staggerChildren, staggerDirection: staggerDirection, repeat: repeat, repeatType: repeatType, repeatDelay: repeatDelay, from: from, elapsed: elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\n\nconst $e7cf8c0a8855364d$export$90b3dfc33ff3548 = (name, value, target, transition = {}, element, isHandoff)=>(onComplete)=>{\n        const valueTransition = (0, $084c484511e70f62$export$7c1391340308742e)(transition, name) || {};\n        /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */ const delay = valueTransition.delay || transition.delay || 0;\n        /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */ let { elapsed: elapsed = 0 } = transition;\n        elapsed = elapsed - (0, $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7)(delay);\n        let options = {\n            keyframes: Array.isArray(target) ? target : [\n                null,\n                target\n            ],\n            ease: \"easeOut\",\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v)=>{\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: ()=>{\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n            name: name,\n            motionValue: value,\n            element: isHandoff ? undefined : element\n        };\n        /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */ if (!(0, $a0e7568f7a593ab2$export$ca8e47dc8ed5a9d7)(valueTransition)) options = {\n            ...options,\n            ...(0, $06af35a3e11efb50$export$262124b154b9f1c0)(name, options)\n        };\n        /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */ if (options.duration) options.duration = (0, $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7)(options.duration);\n        if (options.repeatDelay) options.repeatDelay = (0, $72f03d5c7302cbd5$export$fc3e7e8557f8c8c7)(options.repeatDelay);\n        if (options.from !== undefined) options.keyframes[0] = options.from;\n        let shouldSkip = false;\n        if (options.type === false || options.duration === 0 && !options.repeatDelay) {\n            options.duration = 0;\n            if (options.delay === 0) shouldSkip = true;\n        }\n        if ((0, $5285b300c864cfef$export$888a3d84909f9e3d).current || (0, $201529ac06387f34$export$dd826089e3c5e502).skipAnimations) {\n            shouldSkip = true;\n            options.duration = 0;\n            options.delay = 0;\n        }\n        /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */ if (shouldSkip && !isHandoff && value.get() !== undefined) {\n            const finalKeyframe = (0, $2f3921bc0365cec1$export$14de59408fad90b)(options.keyframes, valueTransition);\n            if (finalKeyframe !== undefined) {\n                (0, $cd672ddb30793005$export$2cef06c20297c17d).update(()=>{\n                    options.onUpdate(finalKeyframe);\n                    options.onComplete();\n                });\n                // We still want to return some animation controls here rather\n                // than returning undefined\n                return new (0, $56437bef5704e34a$export$c1e41718f71efe41)([]);\n            }\n        }\n        /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */ if (!isHandoff && (0, $a9356a9e5ef48c16$export$2a45abb4e6513325).supports(options)) return new (0, $a9356a9e5ef48c16$export$2a45abb4e6513325)(options);\n        else return new (0, $cf6c65dcc91ac255$export$fd98d9cca67a58bc)(options);\n    };\n\n\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */ function $dd3b6319f97df7e6$var$shouldBlockAnimation({ protectedKeys: protectedKeys, needsAnimating: needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction $dd3b6319f97df7e6$export$68cacfeee78d98d2(visualElement, targetAndTransition, { delay: delay = 0, transitionOverride: transitionOverride, type: type } = {}) {\n    var _a;\n    let { transition: transition = visualElement.getDefaultTransition(), transitionEnd: transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride) transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && visualElement.animationState && visualElement.animationState.getState()[type];\n    for(const key in target){\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined || animationTypeState && $dd3b6319f97df7e6$var$shouldBlockAnimation(animationTypeState, key)) continue;\n        const valueTransition = {\n            delay: delay,\n            ...(0, $084c484511e70f62$export$7c1391340308742e)(transition || {}, key)\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */ let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = (0, $81eb25fa0638315c$export$5f8d21e84d1d84fc)(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, (0, $cd672ddb30793005$export$2cef06c20297c17d));\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        (0, $472d68ef6638e027$export$3ac5aed310be0bee)(visualElement, key);\n        value.start((0, $e7cf8c0a8855364d$export$90b3dfc33ff3548)(key, value, valueTarget, visualElement.shouldReduceMotion && (0, $9cde0c46eca3fa0c$export$c66c0d5db2a205d).has(key) ? {\n            type: false\n        } : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) animations.push(animation);\n    }\n    if (transitionEnd) Promise.all(animations).then(()=>{\n        (0, $cd672ddb30793005$export$2cef06c20297c17d).update(()=>{\n            transitionEnd && (0, $c797bc366c9b6fb1$export$1f61c53461aff4a5)(visualElement, transitionEnd);\n        });\n    });\n    return animations;\n}\n\n\nfunction $2b0511dd7fe21989$export$17eda790a720ec57(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\n\n\nconst $cf0cd73f02cf1482$export$ff25708b37f72782 = ()=>({\n        translate: 0,\n        scale: 1,\n        origin: 0,\n        originPoint: 0\n    });\nconst $cf0cd73f02cf1482$export$3d227df54007d73a = ()=>({\n        x: $cf0cd73f02cf1482$export$ff25708b37f72782(),\n        y: $cf0cd73f02cf1482$export$ff25708b37f72782()\n    });\nconst $cf0cd73f02cf1482$export$6db76765312617ac = ()=>({\n        min: 0,\n        max: 0\n    });\nconst $cf0cd73f02cf1482$export$6459fc9e86be362e = ()=>({\n        x: $cf0cd73f02cf1482$export$6db76765312617ac(),\n        y: $cf0cd73f02cf1482$export$6db76765312617ac()\n    });\n\n\n\nconst $16f7e858cd75ed71$var$featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\"\n    ],\n    exit: [\n        \"exit\"\n    ],\n    drag: [\n        \"drag\",\n        \"dragControls\"\n    ],\n    focus: [\n        \"whileFocus\"\n    ],\n    hover: [\n        \"whileHover\",\n        \"onHoverStart\",\n        \"onHoverEnd\"\n    ],\n    tap: [\n        \"whileTap\",\n        \"onTap\",\n        \"onTapStart\",\n        \"onTapCancel\"\n    ],\n    pan: [\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\"\n    ],\n    inView: [\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\"\n    ],\n    layout: [\n        \"layout\",\n        \"layoutId\"\n    ]\n};\nconst $16f7e858cd75ed71$export$65570e08d843624d = {};\nfor(const key in $16f7e858cd75ed71$var$featureProps)$16f7e858cd75ed71$export$65570e08d843624d[key] = {\n    isEnabled: (props)=>$16f7e858cd75ed71$var$featureProps[key].some((name)=>!!props[name])\n};\n\n\n\n\n\nconst $f3bdcff762171062$export$4e09c449d6c407f7 = typeof window !== \"undefined\";\n\n\n// Does this device prefer reduced motion? Returns `null` server-side.\nconst $5a2373393fe140d8$export$ff7706047246b98b = {\n    current: null\n};\nconst $5a2373393fe140d8$export$6476d16e2fd2d0db = {\n    current: false\n};\n\n\nfunction $f1ceb3737cf7e9ff$export$ca9f41fb23dded3d() {\n    (0, $5a2373393fe140d8$export$6476d16e2fd2d0db).current = true;\n    if (!(0, $f3bdcff762171062$export$4e09c449d6c407f7)) return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = ()=>(0, $5a2373393fe140d8$export$ff7706047246b98b).current = motionMediaQuery.matches;\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    } else (0, $5a2373393fe140d8$export$ff7706047246b98b).current = false;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A list of all ValueTypes\n */ const $e08a6d0431172311$var$valueTypes = [\n    ...(0, $2ac2d6c55277c5a1$export$d176691c1998a1f5),\n    (0, $49036ae22fb7dd0b$export$35e9368ef982300f),\n    (0, $a3f9111a4eded79d$export$83a0e34f1302825b)\n];\n/**\n * Tests a value against the list of ValueTypes\n */ const $e08a6d0431172311$export$950e7e59ea1ffed7 = (v)=>$e08a6d0431172311$var$valueTypes.find((0, $36fe2c49c6b04adc$export$6eae4d0a6a7ca7cd)(v));\n\n\n\n\nfunction $165b47966c879500$export$aa71198ceeaf53ce(v) {\n    return v !== null && typeof v === \"object\" && typeof v.start === \"function\";\n}\n\n\n/**\n * Decides if the supplied variable is variant label\n */ function $e139e664b3fcf7e9$export$720b90e312cea233(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\n\nconst $7d02c3afb56a3a30$export$16e45afcc206d3a8 = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\"\n];\nconst $7d02c3afb56a3a30$export$1405a65085f40b9 = [\n    \"initial\",\n    ...$7d02c3afb56a3a30$export$16e45afcc206d3a8\n];\n\n\nfunction $6533115ab60441d7$export$4b3c3bd8d910d78d(props) {\n    return (0, $165b47966c879500$export$aa71198ceeaf53ce)(props.animate) || (0, $7d02c3afb56a3a30$export$1405a65085f40b9).some((name)=>(0, $e139e664b3fcf7e9$export$720b90e312cea233)(props[name]));\n}\nfunction $6533115ab60441d7$export$ce46fa4165cdec40(props) {\n    return Boolean($6533115ab60441d7$export$4b3c3bd8d910d78d(props) || props.variants);\n}\n\n\n\n\n\n\nfunction $68f9b90dd9e7af69$export$9a552858d5197f6e(element, next, prev) {\n    for(const key in next){\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if ((0, $bdc57029e711ba86$export$605d60a2578142d3)(nextValue)) /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */ element.addValue(key, nextValue);\n        else if ((0, $bdc57029e711ba86$export$605d60a2578142d3)(prevValue)) /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */ element.addValue(key, (0, $ca6243e2189ab444$export$ce8bdc721e76545f)(nextValue, {\n            owner: element\n        }));\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */ if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) existingValue.jump(nextValue);\n                else if (!existingValue.hasAnimated) existingValue.set(nextValue);\n            } else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, (0, $ca6243e2189ab444$export$ce8bdc721e76545f)(latestValue !== undefined ? latestValue : nextValue, {\n                    owner: element\n                }));\n            }\n        }\n    }\n    // Handle removed values\n    for(const key in prev)if (next[key] === undefined) element.removeValue(key);\n    return next;\n}\n\n\n\n\nconst $779d7c9057ed8bf2$var$propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\"\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */ class $779d7c9057ed8bf2$export$fa8b653c0f3714e5 {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */ scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent: parent, props: props, presenceContext: presenceContext, reducedMotionConfig: reducedMotionConfig, blockInitialAnimation: blockInitialAnimation, visualState: visualState }, options = {}){\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */ this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */ this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */ this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */ this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */ this.values = new Map();\n        this.KeyframeResolver = (0, $bccc1e36ab507cbc$export$74d34ca3182f1750);\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */ this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */ this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */ this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */ this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */ this.propEventSubscriptions = {};\n        this.notifyUpdate = ()=>this.notify(\"Update\", this.latestValues);\n        this.render = ()=>{\n            if (!this.current) return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = ()=>{\n            const now = (0, $98a6a7cf3d400a23$export$2da9be4cfdb689b1).now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                (0, $cd672ddb30793005$export$2cef06c20297c17d).render(this.render, false, true);\n            }\n        };\n        const { latestValues: latestValues, renderState: renderState, onUpdate: onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = {\n            ...latestValues\n        };\n        this.initialValues = props.initial ? {\n            ...latestValues\n        } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = (0, $6533115ab60441d7$export$4b3c3bd8d910d78d)(props);\n        this.isVariantNode = (0, $6533115ab60441d7$export$ce46fa4165cdec40)(props);\n        if (this.isVariantNode) this.variantChildren = new Set();\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */ const { willChange: willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for(const key in initialMotionValues){\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && (0, $bdc57029e711ba86$export$605d60a2578142d3)(value)) value.set(latestValues[key], false);\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        (0, $e40e1cabb60060bc$export$bc2a978a17abfdde).set(instance, this);\n        if (this.projection && !this.projection.instance) this.projection.mount(instance);\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) this.removeFromVariantTree = this.parent.addVariantChild(this);\n        this.values.forEach((value, key)=>this.bindToMotionValue(key, value));\n        if (!(0, $5a2373393fe140d8$export$6476d16e2fd2d0db).current) (0, $f1ceb3737cf7e9ff$export$ca9f41fb23dded3d)();\n        this.shouldReduceMotion = this.reducedMotionConfig === \"never\" ? false : this.reducedMotionConfig === \"always\" ? true : (0, $5a2373393fe140d8$export$ff7706047246b98b).current;\n        if (this.parent) this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        (0, $e40e1cabb60060bc$export$bc2a978a17abfdde).delete(this.current);\n        this.projection && this.projection.unmount();\n        (0, $cd672ddb30793005$export$ec99c0ef4978dccb)(this.notifyUpdate);\n        (0, $cd672ddb30793005$export$ec99c0ef4978dccb)(this.render);\n        this.valueSubscriptions.forEach((remove)=>remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for(const key in this.events)this.events[key].clear();\n        for(const key in this.features){\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) this.valueSubscriptions.get(key)();\n        const valueIsTransform = (0, $5912f55e0acfeb49$export$7b42a0094fb00b6e).has(key);\n        if (valueIsTransform && this.onBindTransform) this.onBindTransform();\n        const removeOnChange = value.on(\"change\", (latestValue)=>{\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && (0, $cd672ddb30793005$export$2cef06c20297c17d).preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) this.projection.isTransformDirty = true;\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        this.valueSubscriptions.set(key, ()=>{\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck) removeSyncCheck();\n            if (value.owner) value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */ if (!this.current || !this.sortInstanceNodePosition || this.type !== other.type) return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for(key in 0, $16f7e858cd75ed71$export$65570e08d843624d){\n            const featureDefinition = (0, $16f7e858cd75ed71$export$65570e08d843624d)[key];\n            if (!featureDefinition) continue;\n            const { isEnabled: isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */ if (!this.features[key] && FeatureConstructor && isEnabled(this.props)) this.features[key] = new FeatureConstructor(this);\n            /**\n             * If we have a feature, mount or update it.\n             */ if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) feature.update();\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */ measureViewportBox() {\n        return this.current ? this.measureInstanceViewportBox(this.current, this.props) : (0, $cf0cd73f02cf1482$export$6459fc9e86be362e)();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */ update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) this.scheduleRender();\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */ for(let i = 0; i < $779d7c9057ed8bf2$var$propEventHandlers.length; i++){\n            const key = $779d7c9057ed8bf2$var$propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = \"on\" + key;\n            const listener = props[listenerName];\n            if (listener) this.propEventSubscriptions[key] = this.on(key, listener);\n        }\n        this.prevMotionValues = (0, $68f9b90dd9e7af69$export$9a552858d5197f6e)(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) this.handleChildMotionValue();\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */ getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */ getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */ addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren && closestVariantNode.variantChildren.add(child);\n            return ()=>closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */ addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue) this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */ removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */ hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) return this.props.values[key];\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = (0, $ca6243e2189ab444$export$ce8bdc721e76545f)(defaultValue === null ? undefined : defaultValue, {\n                owner: this\n            });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */ readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current ? this.latestValues[key] : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" && ((0, $623f6df036e36c5b$export$65583ed5a868f2d9)(value) || (0, $f3d844a9777b9222$export$ade84c85e44a6cb1)(value))) // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n            else if (!(0, $e08a6d0431172311$export$950e7e59ea1ffed7)(value) && (0, $a3f9111a4eded79d$export$83a0e34f1302825b).test(target)) value = (0, $cb03576e54dad22d$export$cea0cedcb94873b5)(key, target);\n            this.setBaseTarget(key, (0, $bdc57029e711ba86$export$605d60a2578142d3)(value) ? value.get() : value);\n        }\n        return (0, $bdc57029e711ba86$export$605d60a2578142d3)(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */ setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */ getBaseTarget(key) {\n        var _a;\n        const { initial: initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = (0, $f26f5d046ac41cfd$export$d68f140c4d9b48bc)(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) valueFromInitial = variant[key];\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */ if (initial && valueFromInitial !== undefined) return valueFromInitial;\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */ const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !(0, $bdc57029e711ba86$export$605d60a2578142d3)(target)) return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */ return this.initialValues[key] !== undefined && valueFromInitial === undefined ? undefined : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) this.events[eventName] = new (0, $56d9c7139fc5eb24$export$e7dff9482a5fd23c)();\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) this.events[eventName].notify(...args);\n    }\n}\n\n\n\n\nclass $9af1565c13e009e1$export$e49735c2a366bdc7 extends (0, $779d7c9057ed8bf2$export$fa8b653c0f3714e5) {\n    constructor(){\n        super(...arguments);\n        this.KeyframeResolver = (0, $92e0d99d6ef546e1$export$4983792d11b61017);\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */ return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars: vars, style: style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children: children } = this.props;\n        if ((0, $bdc57029e711ba86$export$605d60a2578142d3)(children)) this.childSubscription = children.on(\"change\", (latest)=>{\n            if (this.current) this.current.textContent = `${latest}`;\n        });\n    }\n}\n\n\n\n\n\n\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */ const $3fb7cb78131877f6$export$453ef540a9a1bd6b = (value, type)=>{\n    return type && typeof value === \"number\" ? type.transform(value) : value;\n};\n\n\n\n\n\n\nconst $1c0fe8e99cc254ab$var$translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\"\n};\nconst $1c0fe8e99cc254ab$var$numTransforms = (0, $5912f55e0acfeb49$export$280dc01950909d86).length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */ function $1c0fe8e99cc254ab$export$bdc96e0d5c8f914(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */ for(let i = 0; i < $1c0fe8e99cc254ab$var$numTransforms; i++){\n        const key = (0, $5912f55e0acfeb49$export$280dc01950909d86)[i];\n        const value = latestValues[key];\n        if (value === undefined) continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        else valueIsDefault = parseFloat(value) === 0;\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = (0, $3fb7cb78131877f6$export$453ef540a9a1bd6b)(value, (0, $caf5d058e9bd78f0$export$eec14432cd1cb67b)[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = $1c0fe8e99cc254ab$var$translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) transform[key] = valueAsType;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    else if (transformIsDefault) transformString = \"none\";\n    return transformString;\n}\n\n\n\nfunction $f5981e75977ded9f$export$bb517f8b40f8e99d(state, latestValues, transformTemplate) {\n    const { style: style, vars: vars, transformOrigin: transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */ for(const key in latestValues){\n        const value = latestValues[key];\n        if ((0, $5912f55e0acfeb49$export$7b42a0094fb00b6e).has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        } else if ((0, $95f591b32a5022cf$export$9de1236619d9e756)(key)) {\n            vars[key] = value;\n            continue;\n        } else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = (0, $3fb7cb78131877f6$export$453ef540a9a1bd6b)(value, (0, $caf5d058e9bd78f0$export$eec14432cd1cb67b)[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] = valueAsType;\n            } else style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) style.transform = (0, $1c0fe8e99cc254ab$export$bdc96e0d5c8f914)(latestValues, state.transform, transformTemplate);\n        else if (style.transform) /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */ style.transform = \"none\";\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */ if (hasTransformOrigin) {\n        const { originX: originX = \"50%\", originY: originY = \"50%\", originZ: originZ = 0 } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\n\n\nconst $544d07cea4b4e914$var$dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\"\n};\nconst $544d07cea4b4e914$var$camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\"\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */ function $544d07cea4b4e914$export$311b43f666da1d82(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? $544d07cea4b4e914$var$dashKeys : $544d07cea4b4e914$var$camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = (0, $a3e3e887e365f48f$export$91c0eda1d06bf008).transform(-offset);\n    // Build the dash array\n    const pathLength = (0, $a3e3e887e365f48f$export$91c0eda1d06bf008).transform(length);\n    const pathSpacing = (0, $a3e3e887e365f48f$export$91c0eda1d06bf008).transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\n\n\nfunction $5a357998babe4b7a$var$calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\" ? origin : (0, $a3e3e887e365f48f$export$91c0eda1d06bf008).transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */ function $5a357998babe4b7a$export$d4fbcfc8e5472155(dimensions, originX, originY) {\n    const pxOriginX = $5a357998babe4b7a$var$calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = $5a357998babe4b7a$var$calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */ function $6d36584d382003d8$export$5475d24f125d7053(state, { attrX: attrX, attrY: attrY, attrScale: attrScale, originX: originX, originY: originY, pathLength: pathLength, pathSpacing: pathSpacing = 1, pathOffset: pathOffset = 0, // This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    (0, $f5981e75977ded9f$export$bb517f8b40f8e99d)(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */ if (isSVGTag) {\n        if (state.style.viewBox) state.attrs.viewBox = state.style.viewBox;\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs: attrs, style: style, dimensions: dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */ if (attrs.transform) {\n        if (dimensions) style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions && (originX !== undefined || originY !== undefined || style.transform)) style.transformOrigin = (0, $5a357998babe4b7a$export$d4fbcfc8e5472155)(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined) attrs.x = attrX;\n    if (attrY !== undefined) attrs.y = attrY;\n    if (attrScale !== undefined) attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) (0, $544d07cea4b4e914$export$311b43f666da1d82)(attrs, pathLength, pathSpacing, pathOffset, false);\n}\n\n\n/**\n * A set of attribute names that are always read/written as camel case.\n */ const $455586bb5dfb26b2$export$28931db5d57958e5 = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\"\n]);\n\n\nconst $c99e6a77f9fb580e$export$6328ce7565ea1049 = (tag)=>typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\n\nfunction $457b04c4e0eb9d9d$export$c01c3c7cdbf4420c(instance, renderState) {\n    try {\n        renderState.dimensions = typeof instance.getBBox === \"function\" ? instance.getBBox() : instance.getBoundingClientRect();\n    } catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        };\n    }\n}\n\n\n\nfunction $0d2b2bf5e94be6c9$export$1a32bf6229c258c0(element, { style: style, vars: vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for(const key in vars)element.style.setProperty(key, vars[key]);\n}\n\n\n\nfunction $19e793f1cc7a37a9$export$c5f8399d19a7394b(element, renderState, _styleProp, projection) {\n    (0, $0d2b2bf5e94be6c9$export$1a32bf6229c258c0)(element, renderState, undefined, projection);\n    for(const key in renderState.attrs)element.setAttribute(!(0, $455586bb5dfb26b2$export$28931db5d57958e5).has(key) ? (0, $a06e0e62438326de$export$9fd24a634729c672)(key) : key, renderState.attrs[key]);\n}\n\n\n\n\n\nconst $d2ca6b4332b1d155$export$91ddd985b97788d1 = {};\nfunction $d2ca6b4332b1d155$export$de9e7791c71225fd(correctors) {\n    for(const key in correctors){\n        $d2ca6b4332b1d155$export$91ddd985b97788d1[key] = correctors[key];\n        if ((0, $95f591b32a5022cf$export$9de1236619d9e756)(key)) $d2ca6b4332b1d155$export$91ddd985b97788d1[key].isCSSVariable = true;\n    }\n}\n\n\n\nfunction $ad67016869ae3982$export$6d27ce8e3de1c3cf(key, { layout: layout, layoutId: layoutId }) {\n    return (0, $5912f55e0acfeb49$export$7b42a0094fb00b6e).has(key) || key.startsWith(\"origin\") || (layout || layoutId !== undefined) && (!!(0, $d2ca6b4332b1d155$export$91ddd985b97788d1)[key] || key === \"opacity\");\n}\n\n\n\nfunction $52fce9160b375a3d$export$16da615486abaa45(props, prevProps, visualElement) {\n    var _a;\n    const { style: style } = props;\n    const newValues = {};\n    for(const key in style)if ((0, $bdc57029e711ba86$export$605d60a2578142d3)(style[key]) || prevProps.style && (0, $bdc57029e711ba86$export$605d60a2578142d3)(prevProps.style[key]) || (0, $ad67016869ae3982$export$6d27ce8e3de1c3cf)(key, props) || ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) newValues[key] = style[key];\n    return newValues;\n}\n\n\nfunction $e963f882e0e2a3a0$export$16da615486abaa45(props, prevProps, visualElement) {\n    const newValues = (0, $52fce9160b375a3d$export$16da615486abaa45)(props, prevProps, visualElement);\n    for(const key in props)if ((0, $bdc57029e711ba86$export$605d60a2578142d3)(props[key]) || (0, $bdc57029e711ba86$export$605d60a2578142d3)(prevProps[key])) {\n        const targetKey = (0, $5912f55e0acfeb49$export$280dc01950909d86).indexOf(key) !== -1 ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1) : key;\n        newValues[targetKey] = props[key];\n    }\n    return newValues;\n}\n\n\nclass $63333be467e7bff2$export$86bcdffbaf733d84 extends (0, $9af1565c13e009e1$export$e49735c2a366bdc7) {\n    constructor(){\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = (0, $cf0cd73f02cf1482$export$6459fc9e86be362e);\n        this.updateDimensions = ()=>{\n            if (this.current && !this.renderState.dimensions) (0, $457b04c4e0eb9d9d$export$c01c3c7cdbf4420c)(this.current, this.renderState);\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if ((0, $5912f55e0acfeb49$export$7b42a0094fb00b6e).has(key)) {\n            const defaultType = (0, $265ca4744df72a43$export$67d1babe0338d23b)(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !(0, $455586bb5dfb26b2$export$28931db5d57958e5).has(key) ? (0, $a06e0e62438326de$export$9fd24a634729c672)(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return (0, $e963f882e0e2a3a0$export$16da615486abaa45)(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) (0, $cd672ddb30793005$export$2cef06c20297c17d).postRender(this.updateDimensions);\n    }\n    build(renderState, latestValues, props) {\n        (0, $6d36584d382003d8$export$5475d24f125d7053)(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        (0, $19e793f1cc7a37a9$export$c5f8399d19a7394b)(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = (0, $c99e6a77f9fb580e$export$6328ce7565ea1049)(instance.tagName);\n        super.mount(instance);\n    }\n}\n\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */ function $5877f98052d02f71$export$d3955c6a8f65a36b({ top: top, left: left, right: right, bottom: bottom }) {\n    return {\n        x: {\n            min: left,\n            max: right\n        },\n        y: {\n            min: top,\n            max: bottom\n        }\n    };\n}\nfunction $5877f98052d02f71$export$b6b9cd4198191a47({ x: x, y: y }) {\n    return {\n        top: y.min,\n        right: x.max,\n        bottom: y.max,\n        left: x.min\n    };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */ function $5877f98052d02f71$export$21543fb75483a50(point, transformPoint) {\n    if (!transformPoint) return point;\n    const topLeft = transformPoint({\n        x: point.left,\n        y: point.top\n    });\n    const bottomRight = transformPoint({\n        x: point.right,\n        y: point.bottom\n    });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x\n    };\n}\n\n\n\nfunction $cc187890df122e53$var$isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction $cc187890df122e53$export$bdf30dca883ea463({ scale: scale, scaleX: scaleX, scaleY: scaleY }) {\n    return !$cc187890df122e53$var$isIdentityScale(scale) || !$cc187890df122e53$var$isIdentityScale(scaleX) || !$cc187890df122e53$var$isIdentityScale(scaleY);\n}\nfunction $cc187890df122e53$export$a545127cf1fbb600(values) {\n    return $cc187890df122e53$export$bdf30dca883ea463(values) || $cc187890df122e53$export$bf80f5f8f4dc327f(values) || values.z || values.rotate || values.rotateX || values.rotateY || values.skewX || values.skewY;\n}\nfunction $cc187890df122e53$export$bf80f5f8f4dc327f(values) {\n    return $cc187890df122e53$var$is2DTranslate(values.x) || $cc187890df122e53$var$is2DTranslate(values.y);\n}\nfunction $cc187890df122e53$var$is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\n\n/**\n * Scales a point based on a factor and an originPoint\n */ function $8392448c1b829bc0$export$2290ec7febe36dd6(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */ function $8392448c1b829bc0$export$4e122ddcc0c61a2e(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) point = $8392448c1b829bc0$export$2290ec7febe36dd6(point, boxScale, originPoint);\n    return $8392448c1b829bc0$export$2290ec7febe36dd6(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */ function $8392448c1b829bc0$export$e8e3a712e9ebf422(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = $8392448c1b829bc0$export$4e122ddcc0c61a2e(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = $8392448c1b829bc0$export$4e122ddcc0c61a2e(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */ function $8392448c1b829bc0$export$d80074982803af5c(box, { x: x, y: y }) {\n    $8392448c1b829bc0$export$e8e3a712e9ebf422(box.x, x.translate, x.scale, x.originPoint);\n    $8392448c1b829bc0$export$e8e3a712e9ebf422(box.y, y.translate, y.scale, y.originPoint);\n}\nconst $8392448c1b829bc0$var$TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst $8392448c1b829bc0$var$TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */ function $8392448c1b829bc0$export$e2a980535c55eabb(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength) return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for(let i = 0; i < treeLength; i++){\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */ const { visualElement: visualElement } = node.options;\n        if (visualElement && visualElement.props.style && visualElement.props.style.display === \"contents\") continue;\n        if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) $8392448c1b829bc0$export$58b16271041fbfb(box, {\n            x: -node.scroll.offset.x,\n            y: -node.scroll.offset.y\n        });\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            $8392448c1b829bc0$export$d80074982803af5c(box, delta);\n        }\n        if (isSharedTransition && (0, $cc187890df122e53$export$a545127cf1fbb600)(node.latestValues)) $8392448c1b829bc0$export$58b16271041fbfb(box, node.latestValues);\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */ if (treeScale.x < $8392448c1b829bc0$var$TREE_SCALE_SNAP_MAX && treeScale.x > $8392448c1b829bc0$var$TREE_SCALE_SNAP_MIN) treeScale.x = 1.0;\n    if (treeScale.y < $8392448c1b829bc0$var$TREE_SCALE_SNAP_MAX && treeScale.y > $8392448c1b829bc0$var$TREE_SCALE_SNAP_MIN) treeScale.y = 1.0;\n}\nfunction $8392448c1b829bc0$export$a807a5ce5ebb3895(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */ function $8392448c1b829bc0$export$625f1dd140a2f5e7(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = (0, $a9e22a3f98efa112$export$3bb0b4ff1037b8dd)(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    $8392448c1b829bc0$export$e8e3a712e9ebf422(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */ function $8392448c1b829bc0$export$58b16271041fbfb(box, transform) {\n    $8392448c1b829bc0$export$625f1dd140a2f5e7(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    $8392448c1b829bc0$export$625f1dd140a2f5e7(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\n\nfunction $8fe66008d069b081$export$d8718b6a7e5c624e(instance, transformPoint) {\n    return (0, $5877f98052d02f71$export$d3955c6a8f65a36b)((0, $5877f98052d02f71$export$21543fb75483a50)(instance.getBoundingClientRect(), transformPoint));\n}\nfunction $8fe66008d069b081$export$6a597be7a7940a96(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = $8fe66008d069b081$export$d8718b6a7e5c624e(element, transformPagePoint);\n    const { scroll: scroll } = rootProjectionNode;\n    if (scroll) {\n        (0, $8392448c1b829bc0$export$a807a5ce5ebb3895)(viewportBox.x, scroll.offset.x);\n        (0, $8392448c1b829bc0$export$a807a5ce5ebb3895)(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\n\n\n\n\n\n\n\n\nfunction $76370bd71bf7b7e6$export$3735103072e4a80(element) {\n    return window.getComputedStyle(element);\n}\nclass $76370bd71bf7b7e6$export$23fea75b03ac16b3 extends (0, $9af1565c13e009e1$export$e49735c2a366bdc7) {\n    constructor(){\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = (0, $0d2b2bf5e94be6c9$export$1a32bf6229c258c0);\n    }\n    readValueFromInstance(instance, key) {\n        if ((0, $5912f55e0acfeb49$export$7b42a0094fb00b6e).has(key)) {\n            const defaultType = (0, $265ca4744df72a43$export$67d1babe0338d23b)(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        } else {\n            const computedStyle = $76370bd71bf7b7e6$export$3735103072e4a80(instance);\n            const value = ((0, $95f591b32a5022cf$export$9de1236619d9e756)(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint: transformPagePoint }) {\n        return (0, $8fe66008d069b081$export$d8718b6a7e5c624e)(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        (0, $f5981e75977ded9f$export$bb517f8b40f8e99d)(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return (0, $52fce9160b375a3d$export$16da615486abaa45)(props, prevProps, visualElement);\n    }\n}\n\n\n\n\n\nfunction $acfde851b3b00179$var$isObjectKey(key, object) {\n    return key in object;\n}\nclass $acfde851b3b00179$export$fe67a5eca4e986d6 extends (0, $779d7c9057ed8bf2$export$fa8b653c0f3714e5) {\n    constructor(){\n        super(...arguments);\n        this.type = \"object\";\n    }\n    readValueFromInstance(instance, key) {\n        if ($acfde851b3b00179$var$isObjectKey(key, instance)) {\n            const value = instance[key];\n            if (typeof value === \"string\" || typeof value === \"number\") return value;\n        }\n        return undefined;\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    removeValueFromRenderState(key, renderState) {\n        delete renderState.output[key];\n    }\n    measureInstanceViewportBox() {\n        return (0, $cf0cd73f02cf1482$export$6459fc9e86be362e)();\n    }\n    build(renderState, latestValues) {\n        Object.assign(renderState.output, latestValues);\n    }\n    renderInstance(instance, { output: output }) {\n        Object.assign(instance, output);\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n}\n\n\nfunction $f4e3616b6dceb9fd$export$602bd1946a6d1d47(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {}\n            },\n            latestValues: {}\n        }\n    };\n    const node = (0, $2b0511dd7fe21989$export$17eda790a720ec57)(element) ? new (0, $63333be467e7bff2$export$86bcdffbaf733d84)(options) : new (0, $76370bd71bf7b7e6$export$23fea75b03ac16b3)(options);\n    node.mount(element);\n    (0, $e40e1cabb60060bc$export$bc2a978a17abfdde).set(element, node);\n}\nfunction $f4e3616b6dceb9fd$export$69c3b8be1812d4ee(subject) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                output: {}\n            },\n            latestValues: {}\n        }\n    };\n    const node = new (0, $acfde851b3b00179$export$fe67a5eca4e986d6)(options);\n    node.mount(subject);\n    (0, $e40e1cabb60060bc$export$bc2a978a17abfdde).set(subject, node);\n}\n\n\n\n\n\n\n\nfunction $6e37c867c3725380$export$335a17c977067b99(value, keyframes, options) {\n    const motionValue$1 = (0, $bdc57029e711ba86$export$605d60a2578142d3)(value) ? value : (0, $ca6243e2189ab444$export$ce8bdc721e76545f)(value);\n    motionValue$1.start((0, $e7cf8c0a8855364d$export$90b3dfc33ff3548)(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\n\nfunction $db6fd859e3cf4412$var$isSingleValue(subject, keyframes) {\n    return (0, $bdc57029e711ba86$export$605d60a2578142d3)(subject) || typeof subject === \"number\" || typeof subject === \"string\" && !(0, $4c2737cf5ba8e521$export$d276bfce3b1077ca)(keyframes);\n}\n/**\n * Implementation\n */ function $db6fd859e3cf4412$export$7f91f5969506fd92(subject, keyframes, options, scope) {\n    const animations = [];\n    if ($db6fd859e3cf4412$var$isSingleValue(subject, keyframes)) animations.push((0, $6e37c867c3725380$export$335a17c977067b99)(subject, (0, $4c2737cf5ba8e521$export$d276bfce3b1077ca)(keyframes) ? keyframes.default || keyframes : keyframes, options ? options.default || options : options));\n    else {\n        const subjects = (0, $3d77a7dafe0ccd49$export$92b2aefc56600400)(subject, keyframes, scope);\n        const numSubjects = subjects.length;\n        (0, $66afa3c9bf43e7f2$export$f5708dca728d7177)(Boolean(numSubjects), \"No valid elements provided.\");\n        for(let i = 0; i < numSubjects; i++){\n            const thisSubject = subjects[i];\n            const createVisualElement = thisSubject instanceof Element ? (0, $f4e3616b6dceb9fd$export$602bd1946a6d1d47) : (0, $f4e3616b6dceb9fd$export$69c3b8be1812d4ee);\n            if (!(0, $e40e1cabb60060bc$export$bc2a978a17abfdde).has(thisSubject)) createVisualElement(thisSubject);\n            const visualElement = (0, $e40e1cabb60060bc$export$bc2a978a17abfdde).get(thisSubject);\n            const transition = {\n                ...options\n            };\n            /**\n             * Resolve stagger function if provided.\n             */ if (\"delay\" in transition && typeof transition.delay === \"function\") transition.delay = transition.delay(i, numSubjects);\n            animations.push(...(0, $dd3b6319f97df7e6$export$68cacfeee78d98d2)(visualElement, {\n                ...keyframes,\n                transition: transition\n            }, {}));\n        }\n    }\n    return animations;\n}\n\n\nfunction $298033ac0735c8e9$export$82a013c5b12ef57f(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = (0, $1bc1325d16f3db1e$export$1f0f44b51a4b2f73)(sequence, options, scope, {\n        spring: $5b7d0ac4aa5a14e2$export$b36281d89752ae66\n    });\n    animationDefinitions.forEach(({ keyframes: keyframes, transition: transition }, subject)=>{\n        animations.push(...(0, $db6fd859e3cf4412$export$7f91f5969506fd92)(subject, keyframes, transition));\n    });\n    return animations;\n}\n\n\n\nfunction $f345b0bfc0513b8b$var$isSequence(value) {\n    return Array.isArray(value) && value.some(Array.isArray);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */ function $f345b0bfc0513b8b$export$c17e592002be9b90(scope) {\n    /**\n     * Implementation\n     */ function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n        let animations = [];\n        if ($f345b0bfc0513b8b$var$isSequence(subjectOrSequence)) animations = (0, $298033ac0735c8e9$export$82a013c5b12ef57f)(subjectOrSequence, optionsOrKeyframes, scope);\n        else animations = (0, $db6fd859e3cf4412$export$7f91f5969506fd92)(subjectOrSequence, optionsOrKeyframes, options, scope);\n        const animation = new (0, $56437bef5704e34a$export$c1e41718f71efe41)(animations);\n        if (scope) scope.animations.push(animation);\n        return animation;\n    }\n    return scopedAnimate;\n}\nconst $f345b0bfc0513b8b$export$e3607ec2d7a891c4 = $f345b0bfc0513b8b$export$c17e592002be9b90();\n\n\n\nconst $bcb3ec4cb8da025e$var$thresholds = {\n    some: 0,\n    all: 1\n};\nfunction $bcb3ec4cb8da025e$export$acb1e9cb9ce4ca56(elementOrSelector, onStart, { root: root, margin: rootMargin, amount: amount = \"some\" } = {}) {\n    const elements = (0, $5e2bc7f73bde986d$export$90ceba2564a894f8)(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries)=>{\n        entries.forEach((entry)=>{\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */ if (entry.isIntersecting === Boolean(onEnd)) return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry.target, entry);\n                if (typeof newOnEnd === \"function\") activeIntersections.set(entry.target, newOnEnd);\n                else observer.unobserve(entry.target);\n            } else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: typeof amount === \"number\" ? amount : $bcb3ec4cb8da025e$var$thresholds[amount]\n    });\n    elements.forEach((element)=>observer.observe(element));\n    return ()=>observer.disconnect();\n}\n\n\n\nconst $6b17f08f738443dc$var$duration = 2;\n// phrases animation\nconst $6b17f08f738443dc$var$phrase_first = document.querySelectorAll('.phrase.first');\nconst $6b17f08f738443dc$var$phrase_second = document.querySelectorAll('.phrase.second');\nconst $6b17f08f738443dc$var$phrase_third = document.querySelectorAll('.phrase.third');\nconst $6b17f08f738443dc$var$img = document.querySelectorAll('.img');\nconst $6b17f08f738443dc$var$sequence_phrases = [\n    [\n        $6b17f08f738443dc$var$phrase_first,\n        {\n            opacity: [\n                0,\n                1\n            ],\n            y: [\n                50,\n                0\n            ]\n        },\n        {}\n    ],\n    [\n        $6b17f08f738443dc$var$phrase_second,\n        {\n            opacity: [\n                0,\n                1\n            ],\n            y: [\n                50,\n                0\n            ]\n        },\n        {\n            delay: 0.1\n        }\n    ],\n    [\n        $6b17f08f738443dc$var$phrase_third,\n        {\n            opacity: [\n                0,\n                1\n            ],\n            y: [\n                50,\n                0\n            ]\n        },\n        {\n            delay: 0.1\n        }\n    ]\n];\n(0, $bcb3ec4cb8da025e$export$acb1e9cb9ce4ca56)(\".phrase\", (target)=>{\n    const animation = (0, $f345b0bfc0513b8b$export$e3607ec2d7a891c4)($6b17f08f738443dc$var$sequence_phrases, {\n        duration: $6b17f08f738443dc$var$duration\n    });\n    return ()=>{\n        animation.stop();\n        (0, $f345b0bfc0513b8b$export$e3607ec2d7a891c4)(target, animation);\n    };\n});\n// number animation\nconst $6b17f08f738443dc$var$number = document.querySelector(\".number\");\n(0, $bcb3ec4cb8da025e$export$acb1e9cb9ce4ca56)(\".numwrapper\", (target)=>{\n    const animation = (0, $f345b0bfc0513b8b$export$e3607ec2d7a891c4)(0, 8200000000, {\n        duration: $6b17f08f738443dc$var$duration,\n        onUpdate: (latest)=>{\n            $6b17f08f738443dc$var$number.textContent = Math.round(latest);\n        }\n    });\n    const animationP = (0, $f345b0bfc0513b8b$export$e3607ec2d7a891c4)(\".p\", {\n        opacity: [\n            0,\n            1\n        ],\n        y: [\n            -50,\n            0\n        ]\n    }, {\n        duration: 0.5\n    });\n    return ()=>{\n        animation.stop();\n        animationP.stop();\n        (0, $f345b0bfc0513b8b$export$e3607ec2d7a891c4)(target, animation);\n        (0, $f345b0bfc0513b8b$export$e3607ec2d7a891c4)(\".p\", animationP);\n    };\n});\n// img-phrases animation\nconst $6b17f08f738443dc$var$sequence_img = [\n    [\n        $6b17f08f738443dc$var$img,\n        {\n            opacity: [\n                0,\n                1\n            ]\n        },\n        {\n            delay: 0.3\n        }\n    ],\n    [\n        $6b17f08f738443dc$var$phrase_first,\n        {\n            opacity: [\n                0,\n                1\n            ],\n            y: [\n                50,\n                0\n            ]\n        },\n        {}\n    ],\n    [\n        $6b17f08f738443dc$var$phrase_second,\n        {\n            opacity: [\n                0,\n                1\n            ],\n            y: [\n                50,\n                0\n            ]\n        },\n        {\n            delay: 0.1\n        }\n    ]\n];\n(0, $bcb3ec4cb8da025e$export$acb1e9cb9ce4ca56)(\"img\", (target)=>{\n    const animation = (0, $f345b0bfc0513b8b$export$e3607ec2d7a891c4)($6b17f08f738443dc$var$sequence_img, {\n        duration: $6b17f08f738443dc$var$duration\n    });\n    return ()=>{\n        animation.stop();\n        (0, $f345b0bfc0513b8b$export$e3607ec2d7a891c4)(target, animation);\n    };\n});\n\n\n//# sourceMappingURL=index.b73c65f4.js.map\n","import { animate, easeIn, scroll, transform, spring, inView } from \"motion\";\r\nimport { animate as animateM } from \"motion/mini\";\r\n\r\n\r\n\r\nconst duration = 2;\r\n\r\n// phrases animation\r\nconst phrase_first = document.querySelectorAll('.phrase.first')\r\nconst phrase_second = document.querySelectorAll('.phrase.second')\r\nconst phrase_third = document.querySelectorAll('.phrase.third')\r\nconst img = document.querySelectorAll('.img')\r\nconst sequence_phrases = [\r\n  [phrase_first, \r\n    { opacity: [0, 1], y: [50, 0] }, \r\n    { }],\r\n  [phrase_second, \r\n    { opacity: [0, 1], y: [50, 0] },\r\n    { delay: 0.1 }],\r\n  [phrase_third, \r\n    { opacity: [0, 1], y: [50, 0] },\r\n    { delay: 0.1 }],\r\n]\r\ninView(\".phrase\", (target) =>{\r\n  const animation = animate(sequence_phrases,\r\n    {duration: duration}\r\n  )\r\n  return ()=> {\r\n    animation.stop()\r\n    \r\n    animate(target, animation)\r\n  }\r\n  \r\n})\r\n\r\n// number animation\r\nconst number = document.querySelector(\".number\")\r\ninView(\".numwrapper\", (target) => {\r\n  const animation = animate(0, 8200000000, {\r\n    duration: duration,\r\n    onUpdate: latest => {\r\n      number.textContent = Math.round(latest)\r\n    }\r\n  }\r\n  )\r\n  const animationP = animate(\".p\", \r\n    { opacity: [0, 1], y: [-50, 0] },\r\n    { duration: 0.5 }\r\n  )\r\n  return () => {\r\n    animation.stop()\r\n    animationP.stop()\r\n    \r\n    animate(target, animation)\r\n    animate(\".p\", animationP)\r\n  }\r\n})\r\n\r\n\r\n\r\n// img-phrases animation\r\nconst sequence_img = [\r\n  [img,\r\n    { opacity: [0, 1] },\r\n    { delay: 0.3 }\r\n  ],\r\n  [phrase_first, \r\n    { opacity: [0, 1], y: [50, 0] }, \r\n    { }],\r\n  [phrase_second, \r\n    { opacity: [0, 1], y: [50, 0] },\r\n    { delay: 0.1 }],\r\n]\r\n\r\ninView(\"img\", (target) => {\r\n  const animation = animate(sequence_img, \r\n    {duration: duration}\r\n  )\r\n  return () =>{\r\n    animation.stop()\r\n    \r\n    animate(target, animation)\r\n  }\r\n})","import { GroupPlaybackControls } from '../../../../../motion-dom/dist/es/animation/controls/Group.mjs';\nimport '../../../../../motion-utils/dist/es/errors.mjs';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction isSequence(value) {\n    return Array.isArray(value) && value.some(Array.isArray);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\nfunction createScopedAnimate(scope) {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n        let animations = [];\n        if (isSequence(subjectOrSequence)) {\n            animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n        }\n        else {\n            animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\n        }\n        const animation = new GroupPlaybackControls(animations);\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n}\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { memo } from '../../../../../motion-utils/dist/es/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { spring } from '../generators/spring/index.mjs';\nimport { createAnimationsFromSequence } from '../sequence/create.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope, { spring });\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        animations.push(...animateSubject(subject, keyframes, transition));\n    });\n    return animations;\n}\n\nexport { animateSequence };\n","import '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../../../../../motion-dom/dist/es/animation/generators/utils/calc-duration.mjs';\nimport { generateLinearEasing } from '../../../../../../motion-dom/dist/es/animation/waapi/utils/linear.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { progress } from '../../../../../../motion-utils/dist/es/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { progress } from '../../../../../motion-utils/dist/es/progress.mjs';\nimport { secondsToMilliseconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { createGeneratorEasing } from '../../../../../motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs';\nimport { isGenerator } from '../../../../../motion-dom/dist/es/animation/generators/utils/is-generator.mjs';\nimport { getEasingForSegment } from '../../easing/utils/get-easing-for-segment.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { resolveSubjects } from '../animate/resolve-subjects.mjs';\nimport { calculateRepeatDuration } from './utils/calc-repeat-duration.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { normalizeTimes } from './utils/normalize-times.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nconst MAX_REPEAT = 20;\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope, generators) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numSubjects = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", repeat, repeatType, repeatDelay = 0, ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numSubjects)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            const createGenerator = isGenerator(type)\n                ? type\n                : generators === null || generators === void 0 ? void 0 : generators[type];\n            if (numKeyframes <= 2 && createGenerator) {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta, createGenerator);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Handle repeat options\n             */\n            if (repeat) {\n                invariant(repeat < MAX_REPEAT, \"Repeat count too high, must be less than 20\");\n                duration = calculateRepeatDuration(duration, repeat);\n                const originalKeyframes = [...valueKeyframesAsList];\n                const originalTimes = [...times];\n                ease = Array.isArray(ease) ? [...ease] : [ease];\n                const originalEase = [...ease];\n                for (let repeatIndex = 0; repeatIndex < repeat; repeatIndex++) {\n                    valueKeyframesAsList.push(...originalKeyframes);\n                    for (let keyframeIndex = 0; keyframeIndex < originalKeyframes.length; keyframeIndex++) {\n                        times.push(originalTimes[keyframeIndex] + (repeatIndex + 1));\n                        ease.push(keyframeIndex === 0\n                            ? \"linear\"\n                            : getEasingForSegment(originalEase, keyframeIndex - 1));\n                    }\n                }\n                normalizeTimes(times, repeat);\n            }\n            const targetTime = startTime + duration;\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            const subjects = resolveSubjects(subject, keyframes, scope, elementCache);\n            const numSubjects = subjects.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let subjectIndex = 0; subjectIndex < numSubjects; subjectIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const thisSubject = subjects[subjectIndex];\n                const subjectSequence = getSubjectSequence(thisSubject, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), subjectIndex, numSubjects);\n                }\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition && transition[key]\n        ? {\n            ...transition,\n            ...transition[key],\n        }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { millisecondsToSeconds } from '../../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { progress } from '../../../../../motion-utils/dist/es/progress.mjs';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { resolveElements } from '../../../../../motion-dom/dist/es/utils/resolve-elements.mjs';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\n\nfunction resolveSubjects(subject, keyframes, scope, selectorCache) {\n    if (typeof subject === \"string\" && isDOMKeyframes(keyframes)) {\n        return resolveElements(subject, scope, selectorCache);\n    }\n    else if (subject instanceof NodeList) {\n        return Array.from(subject);\n    }\n    else if (Array.isArray(subject)) {\n        return subject;\n    }\n    else {\n        return [subject];\n    }\n}\n\nexport { resolveSubjects };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","function calculateRepeatDuration(duration, repeat, _repeatDelay) {\n    return duration * (repeat + 1);\n}\n\nexport { calculateRepeatDuration };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mixNumber(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","/**\n * Take an array of times that represent repeated keyframes. For instance\n * if we have original times of [0, 0.5, 1] then our repeated times will\n * be [0, 0.5, 1, 1, 1.5, 2]. Loop over the times and scale them back\n * down to a 0-1 scale.\n */\nfunction normalizeTimes(times, repeat) {\n    for (let i = 0; i < times.length; i++) {\n        times[i] = times[i] / (repeat + 1);\n    }\n}\n\nexport { normalizeTimes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateTarget } from '../interfaces/visual-element-target.mjs';\nimport { createDOMVisualElement, createObjectVisualElement } from '../utils/create-visual-element.mjs';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\nimport { resolveSubjects } from './resolve-subjects.mjs';\nimport { animateSingleValue } from './single-value.mjs';\n\nfunction isSingleValue(subject, keyframes) {\n    return (isMotionValue(subject) ||\n        typeof subject === \"number\" ||\n        (typeof subject === \"string\" && !isDOMKeyframes(keyframes)));\n}\n/**\n * Implementation\n */\nfunction animateSubject(subject, keyframes, options, scope) {\n    const animations = [];\n    if (isSingleValue(subject, keyframes)) {\n        animations.push(animateSingleValue(subject, isDOMKeyframes(keyframes)\n            ? keyframes.default || keyframes\n            : keyframes, options ? options.default || options : options));\n    }\n    else {\n        const subjects = resolveSubjects(subject, keyframes, scope);\n        const numSubjects = subjects.length;\n        invariant(Boolean(numSubjects), \"No valid elements provided.\");\n        for (let i = 0; i < numSubjects; i++) {\n            const thisSubject = subjects[i];\n            const createVisualElement = thisSubject instanceof Element\n                ? createDOMVisualElement\n                : createObjectVisualElement;\n            if (!visualElementStore.has(thisSubject)) {\n                createVisualElement(thisSubject);\n            }\n            const visualElement = visualElementStore.get(thisSubject);\n            const transition = { ...options };\n            /**\n             * Resolve stagger function if provided.\n             */\n            if (\"delay\" in transition &&\n                typeof transition.delay === \"function\") {\n                transition.delay = transition.delay(i, numSubjects);\n            }\n            animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n        }\n    }\n    return animations;\n}\n\nexport { animateSubject };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { getValueTransition } from '../../../../../motion-dom/dist/es/animation/utils/get-value-transition.mjs';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.0.11\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import '../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { GroupPlaybackControls } from '../../../../../motion-dom/dist/es/animation/controls/Group.mjs';\nimport { getValueTransition } from '../../../../../motion-dom/dist/es/animation/utils/get-value-transition.mjs';\nimport '../../../../../motion-utils/dist/es/errors.mjs';\nimport { secondsToMilliseconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { isGenerator } from '../../../../../motion-dom/dist/es/animation/generators/utils/is-generator.mjs';\nimport { attachTimeline } from '../../../../../motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs';\nimport { isWaapiSupportedEasing } from '../../../../../motion-dom/dist/es/animation/waapi/utils/easing.mjs';\nimport { supportsLinearEasing } from '../../../../../motion-dom/dist/es/utils/supports/linear-easing.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { memo } from '../../../../../motion-utils/dist/es/memo.mjs';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import '../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { invariant } from '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { isGenerator } from '../../../../../../motion-dom/dist/es/animation/generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../../../../motion-dom/dist/es/animation/generators/utils/calc-duration.mjs';\nimport { isGenerator } from '../../../../../motion-dom/dist/es/animation/generators/utils/is-generator.mjs';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { isBezierDefinition } from '../../../../../motion-dom/dist/es/utils/is-bezier-definition.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant } from '../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\nimport { progress } from '../../../../motion-utils/dist/es/progress.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { mapEasingToNativeEasing } from '../../../../../../motion-dom/dist/es/animation/waapi/utils/easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import '../../../../../../../motion-utils/dist/es/errors.mjs';\nimport { memo } from '../../../../../../../motion-utils/dist/es/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\nimport { ObjectVisualElement } from '../../render/object/ObjectVisualElement.mjs';\n\nfunction createDOMVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options);\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\nfunction createObjectVisualElement(subject) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                output: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = new ObjectVisualElement(options);\n    node.mount(subject);\n    visualElementStore.set(subject, node);\n}\n\nexport { createDOMVisualElement, createObjectVisualElement };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.0.11\", `Attempting to mix Motion versions ${nextValue.version} with 12.0.11 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nfunction isObjectKey(key, object) {\n    return key in object;\n}\nclass ObjectVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"object\";\n    }\n    readValueFromInstance(instance, key) {\n        if (isObjectKey(key, instance)) {\n            const value = instance[key];\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    removeValueFromRenderState(key, renderState) {\n        delete renderState.output[key];\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    build(renderState, latestValues) {\n        Object.assign(renderState.output, latestValues);\n    }\n    renderInstance(instance, { output }) {\n        Object.assign(instance, output);\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n}\n\nexport { ObjectVisualElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { resolveElements } from '../../../../../../motion-dom/dist/es/utils/resolve-elements.mjs';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry.target, entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n"],"names":["scope","$98a6a7cf3d400a23$var$now","$b0dedcc96679f76e$export$7c73462e0d25e514","callback","result","undefined","$03517027151a4c9c$export$20d68f04f30763a5","window","ScrollTimeline","$e3383feb8717bc71$export$4d0c371993b9283e","constructor","animations","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","i","length","attachTimeline","timeline","fallback","subscriptions","forEach","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","$56437bef5704e34a$export$c1e41718f71efe41","then","onResolve","onReject","catch","$72f03d5c7302cbd5$export$fc3e7e8557f8c8c7","seconds","$72f03d5c7302cbd5$export$f64c3bfbc58eec0f","milliseconds","$58d9506861683f86$export$cbdd6b3d40ea54e2","generator","state","next","done","Infinity","$ef49c9e1b212a303$export$504d7abb21fa8c9","from","to","value","toFromDifference","$b2958e3c2019bdf2$export$66d3851e2b1ec912","easing","resolution","points","numPoints","round","substring","$61505dd9bdaf733e$export$7d15b64cf5a3a4c4","min","v","$26e171f99dec0da1$export$854187271d233eb5","resolveValue","t","current","velocity","frameDuration","prevT","$104c5e3e7ddb3284$export$86436497e7b05d16","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","$784484be748b616c$export$8793edee2d425525","any","$f5a439e913a3fe87$export$5f679887c3a78b15","undampedFreq","dampingRatio","sqrt","$5b7d0ac4aa5a14e2$var$durationKeys","$5b7d0ac4aa5a14e2$var$physicsKeys","$5b7d0ac4aa5a14e2$var$isSpringType","options","keys","some","key","$5b7d0ac4aa5a14e2$export$b36281d89752ae66","optionsOrVisualDuration","resolveSpring","keyframes","origin","target","isResolvedFromDuration","$5b7d0ac4aa5a14e2$var$getSpringOptions","springOptions","root","PI","derived","envelope","derivative","exponentialDecay","delta","$f5a439e913a3fe87$var$safeMin","a","exp","e","pow","f","g","factor","d","$f5a439e913a3fe87$var$approximateRoot","initialGuess","isNaN","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","progress","$fd8d2a9f7ab45528$export$6ab7812f1bac68be","type","$924c42a4fca118a9$export$4997ffc0176396a6","rangeSize","$c781891811e4db53$export$216948827bbdc797","ease","Array","isArray","$995d2e17496ee431$export$41c5e731255a462","$a9e22a3f98efa112$export$3bb0b4ff1037b8dd","$7c3816daf0a74789$export$dafee61230cf05c6","offset","remaining","offsetProgress","push","$9834b5ef2cf2f4ed$export$24dbcec0b26e6d9d","arr","$bdc57029e711ba86$export$605d60a2578142d3","getVelocity","$5e2bc7f73bde986d$export$90ceba2564a894f8","elementOrSelector","selectorCache","_a","Element","document","elements","querySelectorAll","$4c2737cf5ba8e521$export$d276bfce3b1077ca","$3d77a7dafe0ccd49$export$92b2aefc56600400","subject","NodeList","$a9d0c4de202c52be$export$83ccd85155ba9791","prev","labels","startsWith","parseFloat","get","$44c7a8517a60de29$export$fe2d9b4e03920b4c","item","index","indexOf","splice","$6d2f5ff6b37908b9$export$66dd3fbf44e05bd9","b","at","$1bc1325d16f3db1e$var$getSubjectSequence","sequences","has","set","$1bc1325d16f3db1e$var$getValueSequence","name","$1bc1325d16f3db1e$var$isNumber","keyframe","$1bc1325d16f3db1e$var$isNumberKeyframesArray","every","$e40e1cabb60060bc$export$bc2a978a17abfdde","WeakMap","$084c484511e70f62$export$7c1391340308742e","transition","$5912f55e0acfeb49$export$280dc01950909d86","$5912f55e0acfeb49$export$7b42a0094fb00b6e","Set","$9cde0c46eca3fa0c$export$c66c0d5db2a205d","$b11ae2925bfd207e$export$9153ad4c4999f4a0","$53c1bc2b7de18789$export$5485128c47bd48bb","$201529ac06387f34$export$dd826089e3c5e502","skipAnimations","useManualTiming","$94fb5e84bcc9dfbe$export$71ecace0a033b35a","schedule","$cd672ddb30793005$export$2cef06c20297c17d","$cd672ddb30793005$export$ec99c0ef4978dccb","$cd672ddb30793005$export$fff89137e9e818ce","steps","$cd672ddb30793005$export$1811c3a7e3af92f0","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","timestamp","isProcessing","flagRunNextFrame","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","keepAlive","immediate","queue","addToCurrentFrame","add","delete","process","frameData","clear","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","wake","requestAnimationFrame","$98a6a7cf3d400a23$var$clearTime","$98a6a7cf3d400a23$export$2da9be4cfdb689b1","newTime","queueMicrotask","$56d9c7139fc5eb24$export$e7dff9482a5fd23c","handler","notify","c","numSubscriptions","getSize","$ca6243e2189ab444$var$isFloat","$ca6243e2189ab444$export$67fcd818a264039d","$ca6243e2189ab444$export$8cea36d14ee64562","init","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","start","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","$ca6243e2189ab444$export$ce8bdc721e76545f","$f26f5d046ac41cfd$var$getValueState","visualElement","values","$f26f5d046ac41cfd$export$d68f140c4d9b48bc","props","definition","custom","variants","$a06e0e62438326de$export$9fd24a634729c672","str","replace","toLowerCase","$ca4aed32a7be926f$export$8592e1c077c890a6","$5285b300c864cfef$export$888a3d84909f9e3d","$c5545553b2eeb845$export$5bd0fcbc73622e13","onfinish","$f67571d677c611ce$export$ff43f99925d7366b","$939370e4ca1abf64$export$e3ad02c335474dee","linearEasing","$e6437dbefbc3c076$export$866c1d07a1ac2ab","supportsFlag","memoized","createElement","animate","opacity","$47be5444287118bb$export$2523b8f0bd8f44cb","$47be5444287118bb$export$2cf569f5e2221176","linear","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","$c2c66fca466c46bf$var$calcBezier","a1","a2","$c2c66fca466c46bf$export$2c575fa1d20488bd","mX1","mY1","mX2","mY2","getTForX","aX","$c2c66fca466c46bf$var$binarySubdivide","x","lowerBound","upperBound","currentX","currentT","$f2c6839e799d3cd4$export$f946554fb8aeaf0d","p","$6909917a82819a64$export$2c07eeff45156d4d","$10f899f83036f369$export$77edfce482316a60","$10f899f83036f369$export$b01116c84cdfe1a2","$10f899f83036f369$export$ddc5fd596f6c71b2","$f07eca3a74529833$export$6b0af63b873d419e","$c8a3318a0eecf080$export$e444123e42d03385","acos","$c8a3318a0eecf080$export$c8d67a19199d1a50","$c8a3318a0eecf080$export$30d3455eee55bed5","$f3d844a9777b9222$export$ade84c85e44a6cb1","test","$f0b1c3723c46295c$export$98e628dec113755e","parse","transform","$f0b1c3723c46295c$export$58f0f39f63f3cf42","$f0b1c3723c46295c$export$dcdf75081b88279d","$c0af9898baef953e$export$83d2e9e3e4ee39ed","$c74a6b808b7e4f99$export$2444ca58c08448e4","$391018cbad39caec$export$ed808ff6ecd39e8d","$177cdf9831fae6dc$export$2c8400d58aca05e","testProp","Object","prototype","hasOwnProperty","call","$177cdf9831fae6dc$export$73d6f35be992df24","aName","bName","cName","alpha","match","$b43d7766c2461577$var$clampRgbUnit","$b43d7766c2461577$export$7a99c86b5b1f4c9e","$b43d7766c2461577$export$4e46ac54fc82cf3b","red","green","blue","alpha$1","$d57a99a0e704c16e$export$834dfc94dde4b3d8","r","parseInt","$a3e3e887e365f48f$var$createUnitType","unit","endsWith","split","$a3e3e887e365f48f$export$41fc368e1a942b97","$a3e3e887e365f48f$export$626336c2cd4b14de","$a3e3e887e365f48f$export$91c0eda1d06bf008","$a3e3e887e365f48f$export$f91e8c45a95a32f2","$a3e3e887e365f48f$export$aed3d7b7d206c196","$a3e3e887e365f48f$export$44e2e1705876d7ed","$12e46b2a1af36269$export$810b04175080204c","hue","saturation","lightness","$49036ae22fb7dd0b$export$35e9368ef982300f","$67679a030195f642$export$740b69c5fad25dba","$a3f9111a4eded79d$var$NUMBER_TOKEN","$a3f9111a4eded79d$var$COLOR_TOKEN","$a3f9111a4eded79d$var$complexRegex","$a3f9111a4eded79d$export$b61fc7c44bf646d5","originalValue","indexes","color","number","var","types","tokenised","parsedValue","$a3f9111a4eded79d$var$parseComplexValue","$a3f9111a4eded79d$var$createTransformer","source","numSections","output","$a3f9111a4eded79d$var$convertNumbersToZero","$a3f9111a4eded79d$export$83a0e34f1302825b","_b","createTransformer","getAnimatableNone","parsed","transformer","$e1a0a2d93a2765cb$var$maxDefaults","$e1a0a2d93a2765cb$var$applyDefaultFilter","slice","defaultValue","$e1a0a2d93a2765cb$var$functionRegex","$e1a0a2d93a2765cb$export$3dea766d36a8935f","functions","join","$94633ebcc37af2a3$export$7d260a2a5f8bc19e","$caf5d058e9bd78f0$export$eec14432cd1cb67b","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","y","z","perspective","transformPerspective","originX","originY","originZ","zIndex","size","fillOpacity","strokeOpacity","numOctaves","$265ca4744df72a43$export$98cd7c72c5a731fb","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","$265ca4744df72a43$export$67d1babe0338d23b","$cb03576e54dad22d$export$cea0cedcb94873b5","defaultValueType","$2dce6f8f0459cf3b$var$invalidTemplates","$1b02bf129d2c9258$export$8e5250d1aa9bf370","$1b02bf129d2c9258$var$getPosFromMatrix","matrix","pos","$1b02bf129d2c9258$var$getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","$1b02bf129d2c9258$var$transformKeys","$1b02bf129d2c9258$var$nonTranslationalTransformKeys","$1b02bf129d2c9258$export$781d46a8aa670d52","$bccc1e36ab507cbc$var$toResolve","$bccc1e36ab507cbc$var$isScheduled","$bccc1e36ab507cbc$var$anyNeedsMeasurement","$bccc1e36ab507cbc$var$measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","removedTransforms","getValue","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","$bccc1e36ab507cbc$var$readAllKeyframes","readKeyframes","$bccc1e36ab507cbc$export$74d34ca3182f1750","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","isScheduled","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","$623f6df036e36c5b$export$65583ed5a868f2d9","$95f591b32a5022cf$var$checkStringStartsWith","token","$95f591b32a5022cf$export$9de1236619d9e756","$95f591b32a5022cf$var$startsAsVariableToken","$95f591b32a5022cf$export$31f9caa2600b5723","$95f591b32a5022cf$var$singleCssVariableRegex","trim","$506a2846d20244c7$var$splitCSSVariableRegex","$36fe2c49c6b04adc$export$6eae4d0a6a7ca7cd","$2ac2d6c55277c5a1$export$d176691c1998a1f5","$2ac2d6c55277c5a1$export$eefdd52e3ccae428","find","$92e0d99d6ef546e1$export$4983792d11b61017","resolved","$506a2846d20244c7$export$289398774300c991","depth","$506a2846d20244c7$export$b9f0c1f373aee2b0","exec","token1","token2","getComputedStyle","getPropertyValue","trimmed","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","$3e66266273418bc5$export$65676b58b122bc38","$2f3921bc0365cec1$var$isNotNull","$2f3921bc0365cec1$export$14de59408fad90b","repeat","repeatType","resolvedKeyframes","$dacde052213c028d$export$d1e4f34b9c2550c1","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","$9bbba9dfc3c53348$var$hasKeyframesChanged","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","$e82a5eb92c4ea669$var$hueToRgb","q","$32033b81d1f1b601$export$a6f92d4bae65c0f1","$5d2be84d41d51843$export$d4ecea248cce73c","fromExpo","expo","$5d2be84d41d51843$var$colorTypes","$5d2be84d41d51843$var$getColorType","$5d2be84d41d51843$var$asRGBA","model","$5d2be84d41d51843$export$51e568cf5c039bac","fromRGBA","toRGBA","blended","$d9b34e18ce0192f7$var$combineFunctions","$d9b34e18ce0192f7$export$a4627e546088548d","transformers","$ac9900966557002c$export$e5a55ae567dd4ac7","$0893cfa0acaa2184$var$mixNumber","$0893cfa0acaa2184$export$36ec24672cd098e0","$0893cfa0acaa2184$export$65516310a87d8205","$0893cfa0acaa2184$export$3bbefa2f402845c4","$0893cfa0acaa2184$export$ebc23b6840c51ba1","numValues","blendValue","template","originStats","targetStats","$0893cfa0acaa2184$var$matchOrder","orderedOrigin","pointers","originIndex","originValue","$eb3ccdac2f8ee8b8$export$2c9e8a9632a706b2","mixer","$c74e3cf875cd2863$export$ee3ff3a17106998","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","timeReachedBoundary","spring$1","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","$02287815365d4c56$export$929e5a82286172a6","$02287815365d4c56$export$57636bb43b1ccbb0","$02287815365d4c56$export$c07234257a03d5e9","$2e6968a9c5c449be$var$easingLookup","circInOut","backInOut","anticipate","$2e6968a9c5c449be$export$ef97fe084f156ca4","x1","y1","x2","y2","$a8ded32507bfba63$export$d25ddfdf17c3ad3e","keyframeValues","times","easingFunctions","mapTimeToKeyframe","input","clamp","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","$2462c4e6531aa81f$var$createMixers","customMixer","mixerFactory","numMixers","interpolator","progressInRange","o","$a1682e837d496d06$export$c1033964b5ad7fef","passTimestamp","$cf6c65dcc91ac255$var$generators","decay","inertia","tween","spring","$cf6c65dcc91ac255$var$percentToProgress","percent","$cf6c65dcc91ac255$export$fd98d9cca67a58bc","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","KeyframeResolver","assign","keyframes$1","mapPercentToKeyframes","mirroredGenerator","generatorFactory","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","$efb2568a963b5e49$export$a27eefbd8fb5e404","$672d2af02c7550a3$export$51ea9b46fb7a8c5d","$a9356a9e5ef48c16$var$unsupportedEasingFunctions","$a9356a9e5ef48c16$export$2a45abb4e6513325","$47be5444287118bb$export$fcdd8f3f2160beda","pregeneratedAnimation","$a9356a9e5ef48c16$var$pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","valueName","keyframeOptions","$47be5444287118bb$export$916ea73bcd3a6030","segmentEasing","iterations","direction","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","transformTemplate","getProps","$06af35a3e11efb50$var$underDampedSpring","$06af35a3e11efb50$var$criticallyDampedSpring","$06af35a3e11efb50$var$keyframesTransition","$06af35a3e11efb50$var$ease","$06af35a3e11efb50$export$262124b154b9f1c0","valueKey","$e7cf8c0a8855364d$export$90b3dfc33ff3548","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","shouldSkip","$cf0cd73f02cf1482$export$6db76765312617ac","$cf0cd73f02cf1482$export$6459fc9e86be362e","$16f7e858cd75ed71$var$featureProps","exit","drag","focus","hover","tap","pan","inView","layout","$16f7e858cd75ed71$export$65570e08d843624d","isEnabled","$f3bdcff762171062$export$4e09c449d6c407f7","$5a2373393fe140d8$export$ff7706047246b98b","$5a2373393fe140d8$export$6476d16e2fd2d0db","$e08a6d0431172311$var$valueTypes","$e08a6d0431172311$export$950e7e59ea1ffed7","$7d02c3afb56a3a30$export$1405a65085f40b9","$6533115ab60441d7$export$4b3c3bd8d910d78d","$779d7c9057ed8bf2$var$propEventHandlers","$779d7c9057ed8bf2$export$fa8b653c0f3714e5","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","children","isVariantNode","isControllingVariants","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","mount","instance","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","unmount","remove","feature","isMounted","removeSyncCheck","valueIsTransform","onBindTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","prevProps","prevPresenceContext","listener","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","handleChildMotionValue","getVariant","getDefaultTransition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","child","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","args","$9af1565c13e009e1$export$e49735c2a366bdc7","arguments","compareDocumentPosition","vars","childSubscription","textContent","$3fb7cb78131877f6$export$453ef540a9a1bd6b","$1c0fe8e99cc254ab$var$translateAlias","$1c0fe8e99cc254ab$var$numTransforms","$f5981e75977ded9f$export$bb517f8b40f8e99d","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","transformName","$544d07cea4b4e914$var$dashKeys","array","$544d07cea4b4e914$var$camelKeys","$5a357998babe4b7a$var$calcOrigin","$455586bb5dfb26b2$export$28931db5d57958e5","$c99e6a77f9fb580e$export$6328ce7565ea1049","tag","$0d2b2bf5e94be6c9$export$1a32bf6229c258c0","styleProp","getProjectionStyles","setProperty","$d2ca6b4332b1d155$export$91ddd985b97788d1","$52fce9160b375a3d$export$16da615486abaa45","newValues","layoutId","$63333be467e7bff2$export$86bcdffbaf733d84","isSVGTag","updateDimensions","dimensions","getBBox","getBoundingClientRect","defaultType","getAttribute","charAt","toUpperCase","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","pxOriginX","pxOriginY","spacing","useDashCase","_styleProp","setAttribute","tagName","$76370bd71bf7b7e6$export$23fea75b03ac16b3","computedStyle","point","transformPoint","topLeft","bottomRight","$acfde851b3b00179$export$fe67a5eca4e986d6","$f4e3616b6dceb9fd$export$602bd1946a6d1d47","node","SVGElement","$f4e3616b6dceb9fd$export$69c3b8be1812d4ee","$db6fd859e3cf4412$export$7f91f5969506fd92","motionValue$1","subjects","numSubjects","thisSubject","createVisualElement","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","valueTarget","$dd3b6319f97df7e6$var$shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","MotionHandoffAnimation","appearId","$f345b0bfc0513b8b$export$e3607ec2d7a891c4","subjectOrSequence","optionsOrKeyframes","sequence","animationDefinitions","defaultTransition","sequenceTransition","generators","defaultDuration","elementCache","timeLabels","prevTime","segment","resolveValueSequence","valueKeyframes","valueSequence","elementIndex","valueKeyframesAsList","remainingTransition","calculatedDelay","numKeyframes","createGenerator","absoluteDelta","springTransition","springEasing","remainder","unshift","originalKeyframes","originalTimes","originalEase","repeatIndex","keyframeIndex","targetTime","endTime","$1778810cfa2e493c$export$6f93cdbb78924b88","subjectIndex","subjectSequence","valueSequences","sort","valueOffset","valueEasing","$bcb3ec4cb8da025e$var$thresholds","$bcb3ec4cb8da025e$export$acb1e9cb9ce4ca56","onStart","rootMargin","amount","activeIntersections","observer","IntersectionObserver","entries","entry","onEnd","isIntersecting","newOnEnd","unobserve","threshold","observe","disconnect","$6b17f08f738443dc$var$phrase_first","$6b17f08f738443dc$var$phrase_second","$6b17f08f738443dc$var$phrase_third","$6b17f08f738443dc$var$img","$6b17f08f738443dc$var$sequence_phrases","$6b17f08f738443dc$var$number","querySelector","animationP","$6b17f08f738443dc$var$sequence_img"],"version":3,"file":"index.b73c65f4.js.map"}